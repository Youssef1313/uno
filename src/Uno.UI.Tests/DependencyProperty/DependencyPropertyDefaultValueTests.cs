using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Automation;

namespace Uno.UI.Tests
{
	[TestClass]
	public class DependencyPropertyDefaultValueTests
	{
		[TestMethod]
		public void TestDefaultValue()
		{
			/*
			THIS TEST CODE WAS GENERATED BY USING THE FOLLOWING CODE IN A NEW UWP APP.

            var method = typeof(DependencyProperty).GetMethod("GetMetadata");
            
            var builder = new StringBuilder();
            foreach (Type type in Assembly.GetAssembly(typeof(DependencyObject)).GetTypes().Where(myType => myType.IsClass))
            {
                if (type == typeof(MapControl))
                {
                    builder.AppendLine("// Skipping MapControl. Many properties are currently not implemented but not marked with [NotImplemented]");
                    continue;
                }
                foreach (var property in type.GetProperties().Where(p => p.Name.EndsWith("Property") && p.PropertyType == typeof(DependencyProperty) && p.GetMethod.IsStatic))
                {
                    if (
                        property.Name == "MinWindowHeightProperty" || property.Name == "MinWindowWidthProperty" // UWP overrides the default value in a currently-unknown way.
                        || property.Name == "InfoProviderProperty" // Uno declares this as "object" not "DependencyProperty"
                        || property.Name == "TabFocusNavigationProperty" || property.Name == "TabNavigationProperty" // UWP overrides the default value in a currently-unknown way.
                        || property.Name == "FocusVisualSecondaryBrushProperty" || property.Name == "FocusVisualPrimaryBrushProperty" // Depends on theme. We hack this through EnsureFocusVisualBrushDefaults
                        || property.Name == "FontSizeProperty" // UWP overrides the default value in a currently-unknown way.
                        || property.Name == "ForegroundProperty"
                        || property.Name == "IsEnabledProperty" // Uno defines this in FrameworkElement instead of in Control.
                        || property.Name == "IsTabStopProperty" // We override it.
                        || property.Name == "DateProperty" || property.Name == "SelectedDateProperty" // UWP overrides it to null in a currently-unknown way. We use null directly as the default value.
                        || property.Name == "MaxDateProperty" || property.Name == "MinDateProperty" || property.Name == "MaxYearProperty" || property.Name == "MinYearProperty" // Not a static value. TODO: Test it separately.
                        || property.Name == "DayItemFontSizeProperty" || property.Name == "FirstOfMonthLabelFontSizeProperty" || property.Name == "FirstOfYearDecadeLabelFontSizeProperty" // UWP overrides it.
                        || property.Name == "HorizontalFirstOfMonthLabelAlignmentProperty"
                        || property.Name == "MonthYearItemFontSizeProperty" // UWP overrides it.
                        || property.Name == "VerticalDayItemAlignmentProperty" || property.Name == "HorizontalDayItemAlignmentProperty"
                        || property.Name == "IsSynchronizedWithCurrentItemProperty" // UWP overrides it in a currently-unknown way.
                        || (property.Name == "NormalizedAnchorPointProperty" && type.Name == "MapControl")
                    )
                    {
                        builder.AppendLine($"// Skipped property {property.Name}");
                        continue;
                    }

                    try
                    {
                        var metadata = (PropertyMetadata)method.Invoke(property.GetValue(null), new[] { type });
                        var defaultValue = metadata.DefaultValue;
                        if (defaultValue?.ToString() is "System.__ComObject")
                        {
                            continue;
                        }

                        var ifCondition = $"if (!typeof({type.FullName}).GetProperty(\"{property.Name}\").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))";
                        if (property.Name == "NameProperty")
                        {
                            ifCondition = $"//{ifCondition}";
                        }
                        builder.AppendLine(ifCondition);
                        builder.AppendLine("{");
                        var expectedActualPair = GetExpectedAndActual(defaultValue, type, property);
                        builder.AppendLine($"\tAssert.AreEqual({expectedActualPair.Expected}, {expectedActualPair.Actual});");
                        builder.AppendLine("}");
                    }
                    catch (Exception ex)
                    {

                    }
                }
            }

			

        private (string Expected, string Actual) GetExpectedAndActual(object defaultValue, Type type, PropertyInfo property)
        {
            string TransformDouble(double value)
            {
                if (double.IsPositiveInfinity(value))
                {
                    return "double.PositiveInfinity";
                }
                else if (double.IsNegativeInfinity(value))
                {
                    return "double.NegativeInfinity";
                }
                else if (double.IsNaN(value))
                {
                    return "double.NaN";
                }
                else
                {
                    return $"{value}d";
                }
            }

            string TransformFloat(float value)
            {
                if (float.IsPositiveInfinity(value))
                {
                    return "float.PositiveInfinity";
                }
                else if (float.IsNegativeInfinity(value))
                {
                    return "float.NegativeInfinity";
                }
                else if (float.IsNaN(value))
                {
                    return "float.NaN";
                }
                else
                {
                    return $"{value}f";
                }
            }

            string ACTUAL = $"{type.FullName}.{property.Name}.GetMetadata(typeof({type.FullName})).DefaultValue";
            if (defaultValue is null)
            {
                return ("null", ACTUAL);
            }
            if (defaultValue is bool b)
            {
                return (b.ToString().ToLowerInvariant(), ACTUAL);
            }
            if (defaultValue is string s)
            {
                return ($"\"{s}\"", ACTUAL);
            }
            if (defaultValue is int i)
            {
                return (i.ToString(), ACTUAL);
            }
            if (defaultValue is double d)
            {
                return (TransformDouble(d), ACTUAL);
            }
            if (defaultValue is float f)
            {
                return (TransformFloat(f), ACTUAL);
            }
            if (defaultValue is Point p)
            {
                return ($"({TransformDouble(p.X)}, {TransformDouble(p.Y)})", $"(((Windows.Foundation.Point){ACTUAL}).X, ((Windows.Foundation.Point){ACTUAL}).Y)");
            }
            if (defaultValue is Thickness th)
            {
                return ($"({TransformDouble(th.Left)}, {TransformDouble(th.Top)}, {TransformDouble(th.Right)}, {TransformDouble(th.Bottom)})", $"(((Windows.UI.Xaml.Thickness){ACTUAL}).Left, ((Windows.UI.Xaml.Thickness){ACTUAL}).Top, ((Windows.UI.Xaml.Thickness){ACTUAL}).Right, ((Windows.UI.Xaml.Thickness){ACTUAL}).Bottom)");
            }
            if (defaultValue is SolidColorBrush scb)
            {
                return ($"(\"{scb.Color}\", {TransformDouble(scb.Opacity)})", $"(((Windows.UI.Xaml.Media.SolidColorBrush){ACTUAL}).Color.ToString(), ((Windows.UI.Xaml.Media.SolidColorBrush){ACTUAL}).Opacity)");
            }
            if (defaultValue is Color c)
            {
                return ($"\"{c}\"", $"((Windows.UI.Color){ACTUAL}).ToString()");
            }
            if (defaultValue is CornerRadius cr)
            {
                return ($"({TransformDouble(cr.TopLeft)}, {TransformDouble(cr.TopRight)}, {TransformDouble(cr.BottomRight)}, {TransformDouble(cr.BottomLeft)})", $"(((Windows.UI.Xaml.CornerRadius){ACTUAL}).TopLeft, ((Windows.UI.Xaml.CornerRadius){ACTUAL}).TopRight, ((Windows.UI.Xaml.CornerRadius){ACTUAL}).BottomRight, ((Windows.UI.Xaml.CornerRadius){ACTUAL}).BottomLeft)");
            }
            if (defaultValue is GridLength gl)
            {
                return ($"({TransformDouble(gl.Value)}, {(int)gl.GridUnitType})", $"(((Windows.UI.Xaml.GridLength){ACTUAL}).Value, (int)((Windows.UI.Xaml.GridLength){ACTUAL}).GridUnitType)");
            }
            if (defaultValue.GetType().IsEnum)
            {
                var name = Enum.GetName(defaultValue.GetType(), defaultValue);
                if (name is null)
                {
                    return (defaultValue.ToString(), ACTUAL);
                }

                return ($"{defaultValue.GetType().ToString()}.{name}", ACTUAL);
            }

            return ($"\"{defaultValue.ToString()}\"", $"{type.FullName}.{property.Name}.GetMetadata(typeof({type.FullName})).DefaultValue?.ToString() ?? \"<NULL>\"");

        }
			 */// Skipped property MinWindowHeightProperty
			   // Skipped property MinWindowWidthProperty
			if (!typeof(Windows.UI.Xaml.Automation.AutomationAnnotation).GetProperty("TypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Automation.AutomationAnnotation.TypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationAnnotation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("IsRequiredForFormProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Automation.AutomationProperties.IsRequiredForFormProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("LiveSettingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting.Off, Windows.UI.Xaml.Automation.AutomationProperties.LiveSettingProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			//if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("NameProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Automation.AutomationProperties.NameProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("AccessibilityViewProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Automation.Peers.AccessibilityView.Content, Windows.UI.Xaml.Automation.AutomationProperties.AccessibilityViewProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("LevelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Automation.AutomationProperties.LevelProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("PositionInSetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Automation.AutomationProperties.PositionInSetProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("SizeOfSetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Automation.AutomationProperties.SizeOfSetProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("LandmarkTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType.None, Windows.UI.Xaml.Automation.AutomationProperties.LandmarkTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("IsDataValidForFormProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Automation.AutomationProperties.IsDataValidForFormProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("IsPeripheralProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Automation.AutomationProperties.IsPeripheralProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("CultureProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1033, Windows.UI.Xaml.Automation.AutomationProperties.CultureProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("HeadingLevelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel.None, Windows.UI.Xaml.Automation.AutomationProperties.HeadingLevelProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.AutomationProperties).GetProperty("IsDialogProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Automation.AutomationProperties.IsDialogProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.AutomationProperties)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).GetProperty("TypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation.TypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("IsDoubleTapEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.UIElement.IsDoubleTapEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("IsHitTestVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.UIElement.IsHitTestVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("IsHoldingEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.UIElement.IsHoldingEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("IsRightTapEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.UIElement.IsRightTapEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("IsTapEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.UIElement.IsTapEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("ManipulationModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.ManipulationModes.System, Windows.UI.Xaml.UIElement.ManipulationModeProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("OpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.UIElement.OpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("RenderTransformOriginProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.UIElement.RenderTransformOriginProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.UIElement.RenderTransformOriginProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("UseLayoutRoundingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.UIElement.UseLayoutRoundingProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("VisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Visible, Windows.UI.Xaml.UIElement.VisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("AllowDropProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.UIElement.AllowDropProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("CompositeModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.ElementCompositeMode.Inherit, Windows.UI.Xaml.UIElement.CompositeModeProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("CanDragProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.UIElement.CanDragProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("IsAccessKeyScopeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.UIElement.IsAccessKeyScopeProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("ExitDisplayModeOnAccessKeyInvokedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.UIElement.ExitDisplayModeOnAccessKeyInvokedProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("HighContrastAdjustmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.ElementHighContrastAdjustment.Application, Windows.UI.Xaml.UIElement.HighContrastAdjustmentProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("KeyTipHorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.UIElement.KeyTipHorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("KeyTipPlacementModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.KeyTipPlacementMode.Auto, Windows.UI.Xaml.UIElement.KeyTipPlacementModeProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("KeyTipVerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.UIElement.KeyTipVerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("XYFocusDownNavigationStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusNavigationStrategy.Auto, Windows.UI.Xaml.UIElement.XYFocusDownNavigationStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("XYFocusKeyboardNavigationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusKeyboardNavigationMode.Auto, Windows.UI.Xaml.UIElement.XYFocusKeyboardNavigationProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("XYFocusLeftNavigationStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusNavigationStrategy.Auto, Windows.UI.Xaml.UIElement.XYFocusLeftNavigationStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("XYFocusRightNavigationStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusNavigationStrategy.Auto, Windows.UI.Xaml.UIElement.XYFocusRightNavigationStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("XYFocusUpNavigationStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusNavigationStrategy.Auto, Windows.UI.Xaml.UIElement.XYFocusUpNavigationStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			// Skipped property TabFocusNavigationProperty
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("KeyboardAcceleratorPlacementModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.KeyboardAcceleratorPlacementMode.Auto, Windows.UI.Xaml.UIElement.KeyboardAcceleratorPlacementModeProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.UIElement).GetProperty("CanBeScrollAnchorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.UIElement.CanBeScrollAnchorProperty.GetMetadata(typeof(Windows.UI.Xaml.UIElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("ActualHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.FrameworkElement.ActualHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("ActualWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.FrameworkElement.ActualWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("FlowDirectionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FlowDirection.LeftToRight, Windows.UI.Xaml.FrameworkElement.FlowDirectionProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("HeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.NaN, Windows.UI.Xaml.FrameworkElement.HeightProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("HorizontalAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.HorizontalAlignment.Stretch, Windows.UI.Xaml.FrameworkElement.HorizontalAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("LanguageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("en-US", Windows.UI.Xaml.FrameworkElement.LanguageProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("MarginProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.MarginProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.MarginProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.MarginProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.MarginProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("MaxHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.PositiveInfinity, Windows.UI.Xaml.FrameworkElement.MaxHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("MaxWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.PositiveInfinity, Windows.UI.Xaml.FrameworkElement.MaxWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("MinHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.FrameworkElement.MinHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("MinWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.FrameworkElement.MinWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("VerticalAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.VerticalAlignment.Stretch, Windows.UI.Xaml.FrameworkElement.VerticalAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("WidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.NaN, Windows.UI.Xaml.FrameworkElement.WidthProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("RequestedThemeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.ElementTheme.Default, Windows.UI.Xaml.FrameworkElement.RequestedThemeProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("AllowFocusOnInteractionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.FrameworkElement.AllowFocusOnInteractionProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("AllowFocusWhenDisabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.FrameworkElement.AllowFocusWhenDisabledProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("FocusVisualMarginProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Bottom));
			}
			// Skipped property FocusVisualPrimaryBrushProperty
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("FocusVisualPrimaryThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((2d, 2d, 2d, 2d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualPrimaryThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualPrimaryThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualPrimaryThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualPrimaryThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Bottom));
			}
			// Skipped property FocusVisualSecondaryBrushProperty
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("FocusVisualSecondaryThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((1d, 1d, 1d, 1d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualSecondaryThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualSecondaryThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualSecondaryThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.FrameworkElement.FocusVisualSecondaryThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.FrameworkElement).GetProperty("ActualThemeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.ElementTheme.Default, Windows.UI.Xaml.FrameworkElement.ActualThemeProperty.GetMetadata(typeof(Windows.UI.Xaml.FrameworkElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("BorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Control.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Control.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Control.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Control.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("FocusStateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FocusState.Unfocused, Windows.UI.Xaml.Controls.Control.FocusStateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("FontFamilyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.FontFamily", Windows.UI.Xaml.Controls.Control.FontFamilyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property FontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("FontStretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStretch.Normal, Windows.UI.Xaml.Controls.Control.FontStretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("FontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.Control.FontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("FontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.Control.FontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("HorizontalContentAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.HorizontalAlignment.Center, Windows.UI.Xaml.Controls.Control.HorizontalContentAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			// Skipped property IsEnabledProperty
			// Skipped property IsTabStopProperty
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Control.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Control.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Control.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Control.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("TabIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(2147483647, Windows.UI.Xaml.Controls.Control.TabIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			// Skipped property TabNavigationProperty
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("VerticalContentAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.VerticalAlignment.Center, Windows.UI.Xaml.Controls.Control.VerticalContentAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("CharacterSpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Control.CharacterSpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("IsTextScaleFactorEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("IsTemplateFocusTargetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Control.IsTemplateFocusTargetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("UseSystemFocusVisualsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Control.UseSystemFocusVisualsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("ElementSoundModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.ElementSoundMode.Default, Windows.UI.Xaml.Controls.Control.ElementSoundModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("IsFocusEngagedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Control.IsFocusEngagedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("IsFocusEngagementEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Control.IsFocusEngagementEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("RequiresPointerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.RequiresPointer.Never, Windows.UI.Xaml.Controls.Control.RequiresPointerProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("IsTemplateKeyTipTargetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Control.IsTemplateKeyTipTargetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("CornerRadiusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Control.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).TopLeft, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Control.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).TopRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Control.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).BottomRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Control.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue).BottomLeft));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Control).GetProperty("BackgroundSizingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.BackgroundSizing.InnerBorderEdge, Windows.UI.Xaml.Controls.Control.BackgroundSizingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Control)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBar).GetProperty("IsOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBar.IsOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBar).GetProperty("IsStickyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBar.IsStickyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBar).GetProperty("ClosedDisplayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.AppBarClosedDisplayMode.Compact, Windows.UI.Xaml.Controls.AppBar.ClosedDisplayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBar).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.AppBar.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ButtonBase).GetProperty("ClickModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ClickMode.Release, Windows.UI.Xaml.Controls.Primitives.ButtonBase.ClickModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ButtonBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ButtonBase).GetProperty("IsPointerOverProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.ButtonBase.IsPointerOverProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ButtonBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ButtonBase).GetProperty("IsPressedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.ButtonBase.IsPressedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ButtonBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarButton).GetProperty("IsCompactProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBarButton.IsCompactProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarButton).GetProperty("DynamicOverflowOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.AppBarButton.DynamicOverflowOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarButton).GetProperty("IsInOverflowProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBarButton.IsInOverflowProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarButton).GetProperty("LabelPositionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CommandBarLabelPosition.Default, Windows.UI.Xaml.Controls.AppBarButton.LabelPositionProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarElementContainer).GetProperty("DynamicOverflowOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.AppBarElementContainer.DynamicOverflowOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarElementContainer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarElementContainer).GetProperty("IsCompactProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBarElementContainer.IsCompactProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarElementContainer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarElementContainer).GetProperty("IsInOverflowProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBarElementContainer.IsInOverflowProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarElementContainer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarSeparator).GetProperty("IsCompactProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBarSeparator.IsCompactProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarSeparator)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarSeparator).GetProperty("DynamicOverflowOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.AppBarSeparator.DynamicOverflowOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarSeparator)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarSeparator).GetProperty("IsInOverflowProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBarSeparator.IsInOverflowProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarSeparator)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ToggleButton).GetProperty("IsCheckedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ToggleButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ToggleButton).GetProperty("IsThreeStateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsThreeStateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ToggleButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarToggleButton).GetProperty("IsCompactProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBarToggleButton.IsCompactProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarToggleButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarToggleButton).GetProperty("DynamicOverflowOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.AppBarToggleButton.DynamicOverflowOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarToggleButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarToggleButton).GetProperty("IsInOverflowProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AppBarToggleButton.IsInOverflowProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarToggleButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AppBarToggleButton).GetProperty("LabelPositionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CommandBarLabelPosition.Default, Windows.UI.Xaml.Controls.AppBarToggleButton.LabelPositionProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AppBarToggleButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsControl).GetProperty("IsGroupingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ItemsControl.IsGroupingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AutoSuggestBox).GetProperty("AutoMaximizeSuggestionAreaProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.AutoSuggestBox.AutoMaximizeSuggestionAreaProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AutoSuggestBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AutoSuggestBox).GetProperty("IsSuggestionListOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.AutoSuggestBox.IsSuggestionListOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AutoSuggestBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AutoSuggestBox).GetProperty("MaxSuggestionListHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.PositiveInfinity, Windows.UI.Xaml.Controls.AutoSuggestBox.MaxSuggestionListHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AutoSuggestBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AutoSuggestBox).GetProperty("UpdateTextOnSelectProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.AutoSuggestBox.UpdateTextOnSelectProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AutoSuggestBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AutoSuggestBox).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.AutoSuggestBox.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AutoSuggestBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs).GetProperty("ReasonProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.AutoSuggestionBoxTextChangeReason.UserInput, Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs.ReasonProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs)).DefaultValue);
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Controls.BitmapIcon).GetProperty("ShowAsMonochromeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.BitmapIcon.ShowAsMonochromeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.BitmapIcon)).DefaultValue);
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Controls.BitmapIconSource).GetProperty("ShowAsMonochromeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.BitmapIconSource.ShowAsMonochromeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.BitmapIconSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Border).GetProperty("BorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Border.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Border.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Border.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Border.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Border).GetProperty("CornerRadiusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Border.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).TopLeft, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Border.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).TopRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Border.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).BottomRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Border.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).BottomLeft));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Border).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Border.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Border.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Border.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Border.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Border).GetProperty("BackgroundSizingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.BackgroundSizing.InnerBorderEdge, Windows.UI.Xaml.Controls.Border.BackgroundSizingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Border)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarDatePicker).GetProperty("CalendarIdentifierProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("GregorianCalendar", Windows.UI.Xaml.Controls.CalendarDatePicker.CalendarIdentifierProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarDatePicker)).DefaultValue);
			}
			// Skipped property DateProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarDatePicker).GetProperty("DisplayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CalendarViewDisplayMode.Month, Windows.UI.Xaml.Controls.CalendarDatePicker.DisplayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarDatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarDatePicker).GetProperty("FirstDayOfWeekProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.Globalization.DayOfWeek.Sunday, Windows.UI.Xaml.Controls.CalendarDatePicker.FirstDayOfWeekProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarDatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarDatePicker).GetProperty("IsCalendarOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.CalendarDatePicker.IsCalendarOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarDatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarDatePicker).GetProperty("IsGroupLabelVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.CalendarDatePicker.IsGroupLabelVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarDatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarDatePicker).GetProperty("IsOutOfScopeEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.CalendarDatePicker.IsOutOfScopeEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarDatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarDatePicker).GetProperty("IsTodayHighlightedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.CalendarDatePicker.IsTodayHighlightedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarDatePicker)).DefaultValue);
			}
			// Skipped property MaxDateProperty
			// Skipped property MinDateProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarDatePicker).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.CalendarDatePicker.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarDatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("CalendarItemBorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.CalendarView.CalendarItemBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.CalendarView.CalendarItemBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.CalendarView.CalendarItemBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.CalendarView.CalendarItemBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue).Bottom));
			}
			// Skipped property DayItemFontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("DayItemFontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.CalendarView.DayItemFontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("DayItemFontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.CalendarView.DayItemFontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("DisplayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CalendarViewDisplayMode.Month, Windows.UI.Xaml.Controls.CalendarView.DisplayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("FirstDayOfWeekProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.Globalization.DayOfWeek.Sunday, Windows.UI.Xaml.Controls.CalendarView.FirstDayOfWeekProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			// Skipped property FirstOfMonthLabelFontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("FirstOfMonthLabelFontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("FirstOfMonthLabelFontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.CalendarView.FirstOfMonthLabelFontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property FirstOfYearDecadeLabelFontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("FirstOfYearDecadeLabelFontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("FirstOfYearDecadeLabelFontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.CalendarView.FirstOfYearDecadeLabelFontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property HorizontalDayItemAlignmentProperty
			// Skipped property HorizontalFirstOfMonthLabelAlignmentProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("IsGroupLabelVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.CalendarView.IsGroupLabelVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("IsOutOfScopeEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.CalendarView.IsOutOfScopeEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("IsTodayHighlightedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.CalendarView.IsTodayHighlightedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			// Skipped property MaxDateProperty
			// Skipped property MinDateProperty
			// Skipped property MonthYearItemFontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("MonthYearItemFontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.CalendarView.MonthYearItemFontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("MonthYearItemFontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.CalendarView.MonthYearItemFontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("SelectionModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CalendarViewSelectionMode.Single, Windows.UI.Xaml.Controls.CalendarView.SelectionModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("TodayFontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.CalendarView.TodayFontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property VerticalDayItemAlignmentProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarView).GetProperty("VerticalFirstOfMonthLabelAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.VerticalAlignment.Top, Windows.UI.Xaml.Controls.CalendarView.VerticalFirstOfMonthLabelAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarView)).DefaultValue);
			}
			// Skipped property DateProperty
			if (!typeof(Windows.UI.Xaml.Controls.CalendarViewDayItem).GetProperty("IsBlackoutProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.CalendarViewDayItem.IsBlackoutProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CalendarViewDayItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Panel).GetProperty("IsItemsHostProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Panel.IsItemsHostProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Panel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Canvas).GetProperty("LeftProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Canvas.LeftProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Canvas)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Canvas).GetProperty("TopProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Canvas.TopProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Canvas)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Canvas).GetProperty("ZIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Canvas.ZIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Canvas)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CaptureElement).GetProperty("StretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stretch.Uniform, Windows.UI.Xaml.Controls.CaptureElement.StretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CaptureElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("ColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#FFFFFFFF", ((Windows.UI.Color)Windows.UI.Xaml.Controls.ColorPicker.ColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("ColorSpectrumComponentsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ColorSpectrumComponents.HueSaturation, Windows.UI.Xaml.Controls.ColorPicker.ColorSpectrumComponentsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("ColorSpectrumShapeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ColorSpectrumShape.Box, Windows.UI.Xaml.Controls.ColorPicker.ColorSpectrumShapeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsAlphaEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ColorPicker.IsAlphaEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsAlphaSliderVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ColorPicker.IsAlphaSliderVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsAlphaTextInputVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ColorPicker.IsAlphaTextInputVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsColorChannelTextInputVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ColorPicker.IsColorChannelTextInputVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsColorPreviewVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ColorPicker.IsColorPreviewVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsColorSliderVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ColorPicker.IsColorSliderVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsColorSpectrumVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ColorPicker.IsColorSpectrumVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsHexInputVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ColorPicker.IsHexInputVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("IsMoreButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ColorPicker.IsMoreButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("MaxHueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(359, Windows.UI.Xaml.Controls.ColorPicker.MaxHueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("MaxSaturationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(100, Windows.UI.Xaml.Controls.ColorPicker.MaxSaturationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("MaxValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(100, Windows.UI.Xaml.Controls.ColorPicker.MaxValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("MinHueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.ColorPicker.MinHueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("MinSaturationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.ColorPicker.MinSaturationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("MinValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.ColorPicker.MinValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColorPicker).GetProperty("PreviousColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ColorPicker.PreviousColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColorPicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColumnDefinition).GetProperty("MaxWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.PositiveInfinity, Windows.UI.Xaml.Controls.ColumnDefinition.MaxWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColumnDefinition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColumnDefinition).GetProperty("MinWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ColumnDefinition.MinWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColumnDefinition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ColumnDefinition).GetProperty("WidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((1d, 2), (((Windows.UI.Xaml.GridLength)Windows.UI.Xaml.Controls.ColumnDefinition.WidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColumnDefinition)).DefaultValue).Value, (int)((Windows.UI.Xaml.GridLength)Windows.UI.Xaml.Controls.ColumnDefinition.WidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ColumnDefinition)).DefaultValue).GridUnitType));
			}
			// Skipped property IsSynchronizedWithCurrentItemProperty
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.Selector).GetProperty("SelectedIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.Selector)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ComboBox).GetProperty("IsDropDownOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ComboBox.IsDropDownOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ComboBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ComboBox).GetProperty("MaxDropDownHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.PositiveInfinity, Windows.UI.Xaml.Controls.ComboBox.MaxDropDownHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ComboBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ComboBox).GetProperty("IsTextSearchEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ComboBox.IsTextSearchEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ComboBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ComboBox).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.ComboBox.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ComboBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ComboBox).GetProperty("SelectionChangedTriggerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ComboBoxSelectionChangedTrigger.Committed, Windows.UI.Xaml.Controls.ComboBox.SelectionChangedTriggerProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ComboBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ComboBox).GetProperty("IsEditableProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ComboBox.IsEditableProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ComboBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.SelectorItem).GetProperty("IsSelectedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.SelectorItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CommandBar).GetProperty("DefaultLabelPositionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CommandBarDefaultLabelPosition.Bottom, Windows.UI.Xaml.Controls.CommandBar.DefaultLabelPositionProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CommandBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CommandBar).GetProperty("IsDynamicOverflowEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.CommandBar.IsDynamicOverflowEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CommandBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.CommandBar).GetProperty("OverflowButtonVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CommandBarOverflowButtonVisibility.Auto, Windows.UI.Xaml.Controls.CommandBar.OverflowButtonVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.CommandBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("PlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode.Top, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.PlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("AllowFocusOnInteractionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusOnInteractionProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("AllowFocusWhenDisabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.AllowFocusWhenDisabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("ElementSoundModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.ElementSoundMode.Default, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.ElementSoundModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("AreOpenCloseAnimationsEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.AreOpenCloseAnimationsEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("InputDevicePrefersPrimaryCommandsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.InputDevicePrefersPrimaryCommandsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("IsOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.IsOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("ShowModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.FlyoutShowMode.Standard, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.ShowModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase).GetProperty("ShouldConstrainToRootBoundsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Primitives.FlyoutBase.ShouldConstrainToRootBoundsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.FlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentDialog).GetProperty("FullSizeDesiredProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ContentDialog.FullSizeDesiredProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentDialog)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentDialog).GetProperty("IsPrimaryButtonEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ContentDialog.IsPrimaryButtonEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentDialog)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentDialog).GetProperty("IsSecondaryButtonEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ContentDialog.IsSecondaryButtonEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentDialog)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentDialog).GetProperty("DefaultButtonProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ContentDialogButton.None, Windows.UI.Xaml.Controls.ContentDialog.DefaultButtonProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentDialog)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("CharacterSpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.ContentPresenter.CharacterSpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("FontFamilyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.FontFamily", Windows.UI.Xaml.Controls.ContentPresenter.FontFamilyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property FontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("FontStretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStretch.Normal, Windows.UI.Xaml.Controls.ContentPresenter.FontStretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("FontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.ContentPresenter.FontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("FontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.ContentPresenter.FontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("OpticalMarginAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.OpticalMarginAlignment.None, Windows.UI.Xaml.Controls.ContentPresenter.OpticalMarginAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("TextLineBoundsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextLineBounds.Full, Windows.UI.Xaml.Controls.ContentPresenter.TextLineBoundsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("IsTextScaleFactorEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ContentPresenter.IsTextScaleFactorEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("BorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ContentPresenter.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ContentPresenter.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ContentPresenter.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ContentPresenter.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("CornerRadiusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.ContentPresenter.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).TopLeft, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.ContentPresenter.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).TopRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.ContentPresenter.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).BottomRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.ContentPresenter.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).BottomLeft));
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("HorizontalContentAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.HorizontalAlignment.Stretch, Windows.UI.Xaml.Controls.ContentPresenter.HorizontalContentAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("LineHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ContentPresenter.LineHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("LineStackingStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.LineStackingStrategy.MaxHeight, Windows.UI.Xaml.Controls.ContentPresenter.LineStackingStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("MaxLinesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.ContentPresenter.MaxLinesProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ContentPresenter.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ContentPresenter.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ContentPresenter.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ContentPresenter.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("TextWrappingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextWrapping.NoWrap, Windows.UI.Xaml.Controls.ContentPresenter.TextWrappingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("VerticalContentAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.VerticalAlignment.Stretch, Windows.UI.Xaml.Controls.ContentPresenter.VerticalContentAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ContentPresenter).GetProperty("BackgroundSizingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.BackgroundSizing.InnerBorderEdge, Windows.UI.Xaml.Controls.ContentPresenter.BackgroundSizingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("CalendarIdentifierProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("GregorianCalendar", Windows.UI.Xaml.Controls.DatePicker.CalendarIdentifierProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			// Skipped property DateProperty
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("DayFormatProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("day", Windows.UI.Xaml.Controls.DatePicker.DayFormatProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("DayVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.DatePicker.DayVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			// Skipped property MaxYearProperty
			// Skipped property MinYearProperty
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("MonthFormatProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("{month.full}", Windows.UI.Xaml.Controls.DatePicker.MonthFormatProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("MonthVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.DatePicker.MonthVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Horizontal, Windows.UI.Xaml.Controls.DatePicker.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("YearFormatProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("year.full", Windows.UI.Xaml.Controls.DatePicker.YearFormatProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("YearVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.DatePicker.YearVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePicker).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.DatePicker.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePicker)).DefaultValue);
			}
			// Skipped property SelectedDateProperty
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase).GetProperty("TitleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase.TitleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.PickerFlyoutBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyout).GetProperty("CalendarIdentifierProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("GregorianCalendar", Windows.UI.Xaml.Controls.DatePickerFlyout.CalendarIdentifierProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyout)).DefaultValue);
			}
			// Skipped property DateProperty
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyout).GetProperty("DayVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.DatePickerFlyout.DayVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyout)).DefaultValue);
			}
			// Skipped property MaxYearProperty
			// Skipped property MinYearProperty
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyout).GetProperty("MonthVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.DatePickerFlyout.MonthVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyout).GetProperty("YearVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.DatePickerFlyout.YearVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyout).GetProperty("DayFormatProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("day", Windows.UI.Xaml.Controls.DatePickerFlyout.DayFormatProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyout).GetProperty("MonthFormatProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("{month.full}", Windows.UI.Xaml.Controls.DatePickerFlyout.MonthFormatProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyout).GetProperty("YearFormatProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("year.full", Windows.UI.Xaml.Controls.DatePickerFlyout.YearFormatProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyoutItem).GetProperty("PrimaryTextProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.DatePickerFlyoutItem.PrimaryTextProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyoutItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.DatePickerFlyoutItem).GetProperty("SecondaryTextProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.DatePickerFlyoutItem.SecondaryTextProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.DatePickerFlyoutItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FlipView).GetProperty("UseTouchAnimationsForAllNavigationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.FlipView.UseTouchAnimationsForAllNavigationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FlipView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FlyoutPresenter).GetProperty("IsDefaultShadowEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.FlyoutPresenter.IsDefaultShadowEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FlyoutPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIcon).GetProperty("FontFamilyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.FontFamily", Windows.UI.Xaml.Controls.FontIcon.FontFamilyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIcon)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property FontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.FontIcon).GetProperty("FontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.FontIcon.FontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIcon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIcon).GetProperty("FontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.FontIcon.FontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIcon)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIcon).GetProperty("IsTextScaleFactorEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.FontIcon.IsTextScaleFactorEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIcon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIcon).GetProperty("MirroredWhenRightToLeftProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.FontIcon.MirroredWhenRightToLeftProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIcon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIconSource).GetProperty("FontFamilyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.FontFamily", Windows.UI.Xaml.Controls.FontIconSource.FontFamilyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIconSource)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property FontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.FontIconSource).GetProperty("FontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.FontIconSource.FontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIconSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIconSource).GetProperty("FontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.FontIconSource.FontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIconSource)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIconSource).GetProperty("GlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.FontIconSource.GlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIconSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIconSource).GetProperty("IsTextScaleFactorEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.FontIconSource.IsTextScaleFactorEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIconSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.FontIconSource).GetProperty("MirroredWhenRightToLeftProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.FontIconSource.MirroredWhenRightToLeftProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.FontIconSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Frame).GetProperty("BackStackDepthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Frame.BackStackDepthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Frame)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Frame).GetProperty("CacheSizeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(10, Windows.UI.Xaml.Controls.Frame.CacheSizeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Frame)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Frame).GetProperty("CanGoBackProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Frame.CanGoBackProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Frame)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Frame).GetProperty("CanGoForwardProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Frame.CanGoForwardProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Frame)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Frame).GetProperty("CurrentSourcePageTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Frame.CurrentSourcePageTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Frame)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Frame).GetProperty("SourcePageTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Frame.SourcePageTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Frame)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Frame).GetProperty("IsNavigationStackEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Frame.IsNavigationStackEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Frame)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("ColumnProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Grid.ColumnProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("ColumnSpanProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.Grid.ColumnSpanProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("RowProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Grid.RowProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("RowSpanProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.Grid.RowSpanProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("BorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Grid.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Grid.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Grid.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Grid.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("CornerRadiusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Grid.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).TopLeft, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Grid.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).TopRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Grid.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).BottomRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.Grid.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).BottomLeft));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Grid.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Grid.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Grid.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Grid.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("ColumnSpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Grid.ColumnSpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("RowSpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Grid.RowSpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Grid).GetProperty("BackgroundSizingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.BackgroundSizing.InnerBorderEdge, Windows.UI.Xaml.Controls.Grid.BackgroundSizingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Grid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("CanDragItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ListViewBase.CanDragItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("CanReorderItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ListViewBase.CanReorderItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("DataFetchSizeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(3d, Windows.UI.Xaml.Controls.ListViewBase.DataFetchSizeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("IncrementalLoadingThresholdProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ListViewBase.IncrementalLoadingThresholdProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("IncrementalLoadingTriggerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.IncrementalLoadingTrigger.Edge, Windows.UI.Xaml.Controls.ListViewBase.IncrementalLoadingTriggerProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("IsActiveViewProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ListViewBase.IsActiveViewProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("IsItemClickEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ListViewBase.IsItemClickEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("IsSwipeEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ListViewBase.IsSwipeEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("IsZoomedInViewProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ListViewBase.IsZoomedInViewProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("SelectionModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ListViewSelectionMode.Single, Windows.UI.Xaml.Controls.ListViewBase.SelectionModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("ShowsScrollingPlaceholdersProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ListViewBase.ShowsScrollingPlaceholdersProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("ReorderModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ListViewReorderMode.Disabled, Windows.UI.Xaml.Controls.ListViewBase.ReorderModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("IsMultiSelectCheckBoxEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ListViewBase.IsMultiSelectCheckBoxEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListViewBase).GetProperty("SingleSelectionFollowsFocusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ListViewBase.SingleSelectionFollowsFocusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListViewBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.HandwritingView).GetProperty("AreCandidatesEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.HandwritingView.AreCandidatesEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.HandwritingView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.HandwritingView).GetProperty("IsOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.HandwritingView.IsOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.HandwritingView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.HandwritingView).GetProperty("PlacementAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.HandwritingPanelPlacementAlignment.Auto, Windows.UI.Xaml.Controls.HandwritingView.PlacementAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.HandwritingView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Hub).GetProperty("DefaultSectionIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Controls.Hub.DefaultSectionIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Hub)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Hub).GetProperty("IsActiveViewProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Hub.IsActiveViewProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Hub)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Hub).GetProperty("IsZoomedInViewProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Hub.IsZoomedInViewProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Hub)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Hub).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Horizontal, Windows.UI.Xaml.Controls.Hub.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Hub)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.HubSection).GetProperty("IsHeaderInteractiveProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.HubSection.IsHeaderInteractiveProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.HubSection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Image).GetProperty("NineGridProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Image.NineGridProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Image)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Image.NineGridProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Image)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Image.NineGridProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Image)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Image.NineGridProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Image)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Image).GetProperty("StretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stretch.Uniform, Windows.UI.Xaml.Controls.Image.StretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Image)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("ActiveToolProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbar.ActiveToolProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("ChildrenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbar.ChildrenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("InitialControlsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.InkToolbarInitialControls.All, Windows.UI.Xaml.Controls.InkToolbar.InitialControlsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("InkDrawingAttributesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbar.InkDrawingAttributesProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("IsRulerButtonCheckedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.InkToolbar.IsRulerButtonCheckedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("TargetInkCanvasProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbar.TargetInkCanvasProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("ButtonFlyoutPlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.InkToolbarButtonFlyoutPlacement.Bottom, Windows.UI.Xaml.Controls.InkToolbar.ButtonFlyoutPlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("IsStencilButtonCheckedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.InkToolbar.IsStencilButtonCheckedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Horizontal, Windows.UI.Xaml.Controls.InkToolbar.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbar).GetProperty("TargetInkPresenterProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbar.TargetInkPresenterProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarToolButton).GetProperty("IsExtensionGlyphShownProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarToolButton.IsExtensionGlyphShownProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarToolButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton).GetProperty("MaxStrokeWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarPenButton.MaxStrokeWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton).GetProperty("MinStrokeWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarPenButton.MinStrokeWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton).GetProperty("PaletteProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarPenButton.PaletteProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton).GetProperty("SelectedBrushIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarPenButton.SelectedBrushIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton).GetProperty("SelectedBrushProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarPenButton.SelectedBrushProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton).GetProperty("SelectedStrokeWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarPenButton.SelectedStrokeWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarPenButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarCustomPenButton).GetProperty("ConfigurationContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarCustomPenButton.ConfigurationContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarCustomPenButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarCustomPenButton).GetProperty("CustomPenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarCustomPenButton.CustomPenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarCustomPenButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarCustomToolButton).GetProperty("ConfigurationContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarCustomToolButton.ConfigurationContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarCustomToolButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarEraserButton).GetProperty("IsClearAllVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.InkToolbarEraserButton.IsClearAllVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarEraserButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarFlyoutItem).GetProperty("IsCheckedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.InkToolbarFlyoutItem.IsCheckedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarFlyoutItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarFlyoutItem).GetProperty("KindProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.InkToolbarFlyoutItemKind.Simple, Windows.UI.Xaml.Controls.InkToolbarFlyoutItem.KindProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarFlyoutItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarMenuButton).GetProperty("IsExtensionGlyphShownProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarMenuButton.IsExtensionGlyphShownProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarMenuButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl).GetProperty("PenButtonProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl.PenButtonProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarPenConfigurationControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarRulerButton).GetProperty("RulerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarRulerButton.RulerProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarRulerButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton).GetProperty("IsProtractorItemVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.InkToolbarStencilButton.IsProtractorItemVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton).GetProperty("IsRulerItemVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.InkToolbarStencilButton.IsRulerItemVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton).GetProperty("ProtractorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarStencilButton.ProtractorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton).GetProperty("RulerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.InkToolbarStencilButton.RulerProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton).GetProperty("SelectedStencilProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.InkToolbarStencilKind.Ruler, Windows.UI.Xaml.Controls.InkToolbarStencilButton.SelectedStencilProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.InkToolbarStencilButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsPresenter).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsPresenter.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsPresenter.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsPresenter.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsPresenter.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsStackPanel).GetProperty("CacheLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(4d, Windows.UI.Xaml.Controls.ItemsStackPanel.CacheLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsStackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsStackPanel).GetProperty("GroupHeaderPlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement.Top, Windows.UI.Xaml.Controls.ItemsStackPanel.GroupHeaderPlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsStackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsStackPanel).GetProperty("GroupPaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsStackPanel.GroupPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsStackPanel)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsStackPanel.GroupPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsStackPanel)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsStackPanel.GroupPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsStackPanel)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsStackPanel.GroupPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsStackPanel)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsStackPanel).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Vertical, Windows.UI.Xaml.Controls.ItemsStackPanel.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsStackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsStackPanel).GetProperty("AreStickyGroupHeadersEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ItemsStackPanel.AreStickyGroupHeadersEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsStackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid).GetProperty("CacheLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(4d, Windows.UI.Xaml.Controls.ItemsWrapGrid.CacheLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid).GetProperty("GroupHeaderPlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.GroupHeaderPlacement.Top, Windows.UI.Xaml.Controls.ItemsWrapGrid.GroupHeaderPlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid).GetProperty("GroupPaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsWrapGrid.GroupPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsWrapGrid.GroupPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsWrapGrid.GroupPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.ItemsWrapGrid.GroupPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid).GetProperty("ItemHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.NaN, Windows.UI.Xaml.Controls.ItemsWrapGrid.ItemHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid).GetProperty("ItemWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.NaN, Windows.UI.Xaml.Controls.ItemsWrapGrid.ItemWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid).GetProperty("MaximumRowsOrColumnsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Controls.ItemsWrapGrid.MaximumRowsOrColumnsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Vertical, Windows.UI.Xaml.Controls.ItemsWrapGrid.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid).GetProperty("AreStickyGroupHeadersEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ItemsWrapGrid.AreStickyGroupHeadersEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ItemsWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListBox).GetProperty("SelectionModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.SelectionMode.Single, Windows.UI.Xaml.Controls.ListBox.SelectionModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListBox).GetProperty("SingleSelectionFollowsFocusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ListBox.SingleSelectionFollowsFocusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListPickerFlyout).GetProperty("DisplayMemberPathProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ListPickerFlyout.DisplayMemberPathProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListPickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListPickerFlyout).GetProperty("ItemTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ListPickerFlyout.ItemTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListPickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListPickerFlyout).GetProperty("ItemsSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ListPickerFlyout.ItemsSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListPickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListPickerFlyout).GetProperty("SelectedIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ListPickerFlyout.SelectedIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListPickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListPickerFlyout).GetProperty("SelectedItemProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ListPickerFlyout.SelectedItemProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListPickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListPickerFlyout).GetProperty("SelectedValuePathProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ListPickerFlyout.SelectedValuePathProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListPickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListPickerFlyout).GetProperty("SelectedValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ListPickerFlyout.SelectedValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListPickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ListPickerFlyout).GetProperty("SelectionModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ListPickerFlyoutSelectionMode.Single, Windows.UI.Xaml.Controls.ListPickerFlyout.SelectionModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ListPickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement).GetProperty("VisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Maps.MapElement.VisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement).GetProperty("ZIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.Maps.MapElement.ZIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement).GetProperty("MapTabIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Maps.MapElement.MapTabIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement).GetProperty("MapStyleSheetEntryProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapElement.MapStyleSheetEntryProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement).GetProperty("MapStyleSheetEntryStateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapElement.MapStyleSheetEntryStateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement).GetProperty("TagProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapElement.TagProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement)).DefaultValue);
			}
			// Skipped property IsEnabledProperty
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapBillboard).GetProperty("CollisionBehaviorDesiredProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior.RemainVisible, Windows.UI.Xaml.Controls.Maps.MapBillboard.CollisionBehaviorDesiredProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapBillboard)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapBillboard).GetProperty("LocationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapBillboard.LocationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapBillboard)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapBillboard).GetProperty("NormalizedAnchorPointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0.5d, 1d), (((Windows.Foundation.Point)Windows.UI.Xaml.Controls.Maps.MapBillboard.NormalizedAnchorPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapBillboard)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Controls.Maps.MapBillboard.NormalizedAnchorPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapBillboard)).DefaultValue).Y));
			}
			// Skipping MapControl. Many properties are currently not implemented but not marked with [NotImplemented]
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D).GetProperty("HeadingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Maps.MapElement3D.HeadingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D).GetProperty("LocationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapElement3D.LocationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D).GetProperty("PitchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Maps.MapElement3D.PitchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D).GetProperty("RollProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Maps.MapElement3D.RollProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D).GetProperty("ScaleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("<1, 1, 1>", Windows.UI.Xaml.Controls.Maps.MapElement3D.ScaleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElement3D)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapLayer).GetProperty("MapTabIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Maps.MapLayer.MapTabIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapLayer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapLayer).GetProperty("VisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Maps.MapLayer.VisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapLayer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapLayer).GetProperty("ZIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.Maps.MapLayer.ZIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapLayer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapElementsLayer).GetProperty("MapElementsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapElementsLayer.MapElementsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapElementsLayer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapIcon).GetProperty("LocationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapIcon.LocationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapIcon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapIcon).GetProperty("NormalizedAnchorPointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0.5d, 0.5d), (((Windows.Foundation.Point)Windows.UI.Xaml.Controls.Maps.MapIcon.NormalizedAnchorPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapIcon)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Controls.Maps.MapIcon.NormalizedAnchorPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapIcon)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapIcon).GetProperty("TitleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapIcon.TitleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapIcon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapIcon).GetProperty("CollisionBehaviorDesiredProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Maps.MapElementCollisionBehavior.RemainVisible, Windows.UI.Xaml.Controls.Maps.MapIcon.CollisionBehaviorDesiredProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapIcon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapItemsControl).GetProperty("ItemTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapItemsControl.ItemTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapItemsControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapItemsControl).GetProperty("ItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapItemsControl.ItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapItemsControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapItemsControl).GetProperty("ItemsSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapItemsControl.ItemsSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapItemsControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapPolygon).GetProperty("PathProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapPolygon.PathProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapPolygon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapPolygon).GetProperty("StrokeDashedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Maps.MapPolygon.StrokeDashedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapPolygon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapPolygon).GetProperty("StrokeThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.Maps.MapPolygon.StrokeThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapPolygon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapPolyline).GetProperty("PathProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapPolyline.PathProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapPolyline)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapPolyline).GetProperty("StrokeDashedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Maps.MapPolyline.StrokeDashedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapPolyline)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("AllowOverstretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Maps.MapTileSource.AllowOverstretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("BoundsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.Devices.Geolocation.GeoboundingBox", Windows.UI.Xaml.Controls.Maps.MapTileSource.BoundsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("DataSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapTileSource.DataSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("IsFadingEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Maps.MapTileSource.IsFadingEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("IsRetryEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Maps.MapTileSource.IsRetryEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("IsTransparencyEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Maps.MapTileSource.IsTransparencyEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("LayerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Maps.MapTileLayer.RoadOverlay, Windows.UI.Xaml.Controls.Maps.MapTileSource.LayerProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("TilePixelSizeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(256, Windows.UI.Xaml.Controls.Maps.MapTileSource.TilePixelSizeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("VisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Maps.MapTileSource.VisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("ZIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Maps.MapTileSource.ZIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("ZoomLevelRangeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Controls.Maps.MapZoomLevelRange", Windows.UI.Xaml.Controls.Maps.MapTileSource.ZoomLevelRangeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("AnimationStateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Maps.MapTileAnimationState.Stopped, Windows.UI.Xaml.Controls.Maps.MapTileSource.AnimationStateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("AutoPlayProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Maps.MapTileSource.AutoPlayProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("FrameCountProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Maps.MapTileSource.FrameCountProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource).GetProperty("FrameDurationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Maps.MapTileSource.FrameDurationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Maps.MapTileSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("DownloadProgressOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.MediaElement.DownloadProgressOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("Stereo3DVideoPackingModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stereo3DVideoPackingMode.None, Windows.UI.Xaml.Controls.MediaElement.Stereo3DVideoPackingModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("Stereo3DVideoRenderModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stereo3DVideoRenderMode.Mono, Windows.UI.Xaml.Controls.MediaElement.Stereo3DVideoRenderModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("ActualStereo3DVideoPackingModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stereo3DVideoPackingMode.None, Windows.UI.Xaml.Controls.MediaElement.ActualStereo3DVideoPackingModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("AspectRatioHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.MediaElement.AspectRatioHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("AspectRatioWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.MediaElement.AspectRatioWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("AudioCategoryProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.AudioCategory.Other, Windows.UI.Xaml.Controls.MediaElement.AudioCategoryProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("AudioDeviceTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.AudioDeviceType.Multimedia, Windows.UI.Xaml.Controls.MediaElement.AudioDeviceTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("AudioStreamCountProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.MediaElement.AudioStreamCountProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("AudioStreamIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.MediaElement.AudioStreamIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("AutoPlayProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.MediaElement.AutoPlayProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("BalanceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.MediaElement.BalanceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("BufferingProgressProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.MediaElement.BufferingProgressProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("CanPauseProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.CanPauseProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("CanSeekProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.CanSeekProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("CurrentStateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.MediaElementState.Closed, Windows.UI.Xaml.Controls.MediaElement.CurrentStateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("DefaultPlaybackRateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.MediaElement.DefaultPlaybackRateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("VolumeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.MediaElement.VolumeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("DownloadProgressProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.MediaElement.DownloadProgressProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("IsAudioOnlyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.IsAudioOnlyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("IsLoopingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.IsLoopingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("IsMutedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.IsMutedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("IsStereo3DVideoProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.IsStereo3DVideoProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("NaturalDurationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Controls.MediaElement.NaturalDurationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("NaturalVideoHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.MediaElement.NaturalVideoHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("NaturalVideoWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.MediaElement.NaturalVideoWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("PlaybackRateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.MediaElement.PlaybackRateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("PositionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Controls.MediaElement.PositionProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("RealTimePlaybackProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.RealTimePlaybackProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("IsFullWindowProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.IsFullWindowProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("StretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stretch.Uniform, Windows.UI.Xaml.Controls.MediaElement.StretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaElement).GetProperty("AreTransportControlsEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaElement.AreTransportControlsEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaPlayerElement).GetProperty("AreTransportControlsEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaPlayerElement.AreTransportControlsEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaPlayerElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaPlayerElement).GetProperty("AutoPlayProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaPlayerElement.AutoPlayProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaPlayerElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaPlayerElement).GetProperty("IsFullWindowProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaPlayerElement.IsFullWindowProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaPlayerElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaPlayerElement).GetProperty("StretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stretch.None, Windows.UI.Xaml.Controls.MediaPlayerElement.StretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaPlayerElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaPlayerPresenter).GetProperty("IsFullWindowProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaPlayerPresenter.IsFullWindowProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaPlayerPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaPlayerPresenter).GetProperty("StretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stretch.None, Windows.UI.Xaml.Controls.MediaPlayerPresenter.StretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaPlayerPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsCompactProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsCompactProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsFastForwardButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsFastForwardButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsFastForwardEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsFastForwardEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsFastRewindButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsFastRewindButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsFastRewindEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsFastRewindEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsFullWindowButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsFullWindowButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsFullWindowEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsFullWindowEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsPlaybackRateButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsPlaybackRateEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsPlaybackRateEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsSeekBarVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsSeekBarVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsSeekEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsSeekEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsStopButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsStopButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsStopEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsStopEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsVolumeButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsVolumeButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsVolumeEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsVolumeEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsZoomButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsZoomButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsZoomEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsZoomEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("FastPlayFallbackBehaviourProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.FastPlayFallbackBehaviour.Skip, Windows.UI.Xaml.Controls.MediaTransportControls.FastPlayFallbackBehaviourProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsNextTrackButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsNextTrackButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsPreviousTrackButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsPreviousTrackButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsSkipBackwardButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsSkipBackwardEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsSkipBackwardEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsSkipForwardButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsSkipForwardEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsSkipForwardEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsRepeatButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsRepeatButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsRepeatEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsRepeatEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("ShowAndHideAutomaticallyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.ShowAndHideAutomaticallyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsCompactOverlayButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsCompactOverlayButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControls).GetProperty("IsCompactOverlayEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.MediaTransportControls.IsCompactOverlayEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControls)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MediaTransportControlsHelper).GetProperty("DropoutOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.MediaTransportControlsHelper.DropoutOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MediaTransportControlsHelper)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MenuBar).GetProperty("ItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.MenuBar.ItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MenuBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MenuBarItem).GetProperty("ItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.MenuBarItem.ItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MenuBarItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MenuBarItem).GetProperty("TitleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.MenuBarItem.TitleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MenuBarItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.MenuFlyoutPresenter).GetProperty("IsDefaultShadowEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.MenuFlyoutPresenter.IsDefaultShadowEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.MenuFlyoutPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("ExpandedModeThresholdWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1008d, Windows.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("IsSettingsVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.NavigationView.IsSettingsVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("MenuItemContainerStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("MenuItemContainerStyleSelectorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelectorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("MenuItemTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.MenuItemTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("MenuItemTemplateSelectorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelectorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("MenuItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.MenuItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("MenuItemsSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.MenuItemsSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("OpenPaneLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(320d, Windows.UI.Xaml.Controls.NavigationView.OpenPaneLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("PaneFooterProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.PaneFooterProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("PaneToggleButtonStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("SelectedItemProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.SelectedItemProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("AlwaysShowHeaderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.NavigationView.AlwaysShowHeaderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("AutoSuggestBoxProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.AutoSuggestBoxProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("CompactModeThresholdWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(641d, Windows.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("CompactPaneLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(48d, Windows.UI.Xaml.Controls.NavigationView.CompactPaneLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("DisplayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal, Windows.UI.Xaml.Controls.NavigationView.DisplayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("SettingsItemProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.SettingsItemProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("HeaderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.HeaderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("HeaderTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.HeaderTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("IsPaneOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.NavigationView.IsPaneOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("IsPaneToggleButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("IsBackButtonVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto, Windows.UI.Xaml.Controls.NavigationView.IsBackButtonVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("IsBackEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.NavigationView.IsBackEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("PaneTitleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.NavigationView.PaneTitleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("IsPaneVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.NavigationView.IsPaneVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("OverflowLabelModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel, Windows.UI.Xaml.Controls.NavigationView.OverflowLabelModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("PaneCustomContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.PaneCustomContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("PaneDisplayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto, Windows.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("PaneHeaderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.PaneHeaderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("SelectionFollowsFocusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled, Windows.UI.Xaml.Controls.NavigationView.SelectionFollowsFocusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("ShoulderNavigationEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never, Windows.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("TemplateSettingsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.TemplateSettingsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationView).GetProperty("ContentOverlayProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationView.ContentOverlayProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewItem).GetProperty("CompactPaneLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(48d, Windows.UI.Xaml.Controls.NavigationViewItem.CompactPaneLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewItem).GetProperty("IconProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.NavigationViewItem.IconProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewItem).GetProperty("SelectsOnInvokedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvokedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings).GetProperty("BackButtonVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Collapsed, Windows.UI.Xaml.Controls.NavigationViewTemplateSettings.BackButtonVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings).GetProperty("LeftPaneVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Visible, Windows.UI.Xaml.Controls.NavigationViewTemplateSettings.LeftPaneVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings).GetProperty("OverflowButtonVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Collapsed, Windows.UI.Xaml.Controls.NavigationViewTemplateSettings.OverflowButtonVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings).GetProperty("PaneToggleButtonVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Visible, Windows.UI.Xaml.Controls.NavigationViewTemplateSettings.PaneToggleButtonVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings).GetProperty("SingleSelectionFollowsFocusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.NavigationViewTemplateSettings.SingleSelectionFollowsFocusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings).GetProperty("TopPaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings).GetProperty("TopPaneVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Collapsed, Windows.UI.Xaml.Controls.NavigationViewTemplateSettings.TopPaneVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.NavigationViewTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("ChildProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ParallaxView.ChildProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("HorizontalShiftProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ParallaxView.HorizontalShiftProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("HorizontalSourceEndOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ParallaxView.HorizontalSourceEndOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("HorizontalSourceOffsetKindProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ParallaxSourceOffsetKind.Relative, Windows.UI.Xaml.Controls.ParallaxView.HorizontalSourceOffsetKindProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("HorizontalSourceStartOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ParallaxView.HorizontalSourceStartOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("IsHorizontalShiftClampedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ParallaxView.IsHorizontalShiftClampedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("IsVerticalShiftClampedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ParallaxView.IsVerticalShiftClampedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("MaxHorizontalShiftRatioProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.ParallaxView.MaxHorizontalShiftRatioProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("MaxVerticalShiftRatioProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.ParallaxView.MaxVerticalShiftRatioProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("SourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.ParallaxView.SourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("VerticalShiftProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ParallaxView.VerticalShiftProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("VerticalSourceEndOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ParallaxView.VerticalSourceEndOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("VerticalSourceOffsetKindProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ParallaxSourceOffsetKind.Relative, Windows.UI.Xaml.Controls.ParallaxView.VerticalSourceOffsetKindProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ParallaxView).GetProperty("VerticalSourceStartOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ParallaxView.VerticalSourceStartOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ParallaxView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PasswordBox).GetProperty("IsPasswordRevealButtonEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.PasswordBox.IsPasswordRevealButtonEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PasswordBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PasswordBox).GetProperty("MaxLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.PasswordBox.MaxLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PasswordBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PasswordBox).GetProperty("PreventKeyboardDisplayOnProgrammaticFocusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.PasswordBox.PreventKeyboardDisplayOnProgrammaticFocusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PasswordBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PasswordBox).GetProperty("PasswordRevealModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.PasswordRevealMode.Peek, Windows.UI.Xaml.Controls.PasswordBox.PasswordRevealModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PasswordBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PasswordBox).GetProperty("TextReadingOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextReadingOrder.UseFlowDirection, Windows.UI.Xaml.Controls.PasswordBox.TextReadingOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PasswordBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PasswordBox).GetProperty("CanPasteClipboardContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.PasswordBox.CanPasteClipboardContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PasswordBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("BadgeGlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.PersonPicture.BadgeGlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("BadgeImageSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.PersonPicture.BadgeImageSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("BadgeNumberProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.PersonPicture.BadgeNumberProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("BadgeTextProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.PersonPicture.BadgeTextProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("ContactProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.PersonPicture.ContactProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("DisplayNameProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.PersonPicture.DisplayNameProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("InitialsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.PersonPicture.InitialsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("IsGroupProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.PersonPicture.IsGroupProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("PreferSmallImageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.PersonPicture.PreferSmallImageProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PersonPicture).GetProperty("ProfilePictureProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.PersonPicture.ProfilePictureProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PersonPicture)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PickerFlyout).GetProperty("ConfirmationButtonsVisibleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.PickerFlyout.ConfirmationButtonsVisibleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PickerFlyout).GetProperty("ContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.PickerFlyout.ContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("HeaderTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.HeaderTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("IsLockedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.IsLockedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("SelectedIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.SelectedIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("SelectedItemProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.SelectedItemProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("SlideInAnimationGroupProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.PivotSlideInAnimationGroup.Default, Windows.UI.Xaml.Controls.Pivot.SlideInAnimationGroupProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("TitleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.TitleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("TitleTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.TitleTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("LeftHeaderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.LeftHeaderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("LeftHeaderTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.LeftHeaderTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("RightHeaderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.RightHeaderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("RightHeaderTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Pivot.RightHeaderTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("HeaderFocusVisualPlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.PivotHeaderFocusVisualPlacement.ItemHeaders, Windows.UI.Xaml.Controls.Pivot.HeaderFocusVisualPlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Pivot).GetProperty("IsHeaderItemsCarouselEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Pivot.IsHeaderItemsCarouselEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Pivot)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.PivotItem).GetProperty("HeaderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.PivotItem.HeaderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.PivotItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.RangeBase).GetProperty("MinimumProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Primitives.RangeBase.MinimumProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.RangeBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.RangeBase).GetProperty("ValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.RangeBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Slider).GetProperty("IntermediateValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Slider.IntermediateValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Slider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Slider).GetProperty("IsDirectionReversedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Slider.IsDirectionReversedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Slider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Slider).GetProperty("IsThumbToolTipEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Slider.IsThumbToolTipEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Slider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Slider).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Horizontal, Windows.UI.Xaml.Controls.Slider.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Slider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Slider).GetProperty("SnapsToProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.SliderSnapsTo.StepValues, Windows.UI.Xaml.Controls.Slider.SnapsToProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Slider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Slider).GetProperty("StepFrequencyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.Slider.StepFrequencyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Slider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Slider).GetProperty("TickFrequencyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Slider.TickFrequencyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Slider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Slider).GetProperty("TickPlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.TickPlacement.Inline, Windows.UI.Xaml.Controls.Slider.TickPlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Slider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorPickerSlider).GetProperty("ColorChannelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ColorPickerHsvChannel.Value, Windows.UI.Xaml.Controls.Primitives.ColorPickerSlider.ColorChannelProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorPickerSlider)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("ColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#FFFFFFFF", ((Windows.UI.Color)Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.ColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("ComponentsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ColorSpectrumComponents.HueSaturation, Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.ComponentsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("HsvColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("<0, 0, 1, 1>", Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.HsvColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("MaxHueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(359, Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxHueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("MaxSaturationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(100, Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxSaturationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("MaxValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(100, Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.MaxValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("MinHueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.MinHueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("MinSaturationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.MinSaturationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("MinValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.MinValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum).GetProperty("ShapeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ColorSpectrumShape.Box, Windows.UI.Xaml.Controls.Primitives.ColorSpectrum.ShapeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ColorSpectrum)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("ContentMarginProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ContentMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ContentMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ContentMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ContentMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("DisabledOpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DisabledOpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("DragOpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.DragOpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("GridViewItemPresenterHorizontalContentAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.HorizontalAlignment.Stretch, Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterHorizontalContentAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("GridViewItemPresenterPaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("GridViewItemPresenterVerticalContentAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.VerticalAlignment.Stretch, Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.GridViewItemPresenterVerticalContentAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("PointerOverBackgroundMarginProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.PointerOverBackgroundMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("ReorderHintOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.ReorderHintOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("SelectedBorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectedBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter).GetProperty("SelectionCheckMarkVisualEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter.SelectionCheckMarkVisualEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.GridViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter).GetProperty("DisabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(("#33FFFFFF", 1d), (((Windows.UI.Xaml.Media.SolidColorBrush)Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.DisabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter)).DefaultValue).Color.ToString(), ((Windows.UI.Xaml.Media.SolidColorBrush)Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.DisabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter)).DefaultValue).Opacity));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter).GetProperty("EnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(("#FF0078D7", 1d), (((Windows.UI.Xaml.Media.SolidColorBrush)Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.EnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter)).DefaultValue).Color.ToString(), ((Windows.UI.Xaml.Media.SolidColorBrush)Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter.EnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemBackgroundConverter)).DefaultValue).Opacity));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter).GetProperty("DisabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(("#66FFFFFF", 1d), (((Windows.UI.Xaml.Media.SolidColorBrush)Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.DisabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter)).DefaultValue).Color.ToString(), ((Windows.UI.Xaml.Media.SolidColorBrush)Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.DisabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter)).DefaultValue).Opacity));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter).GetProperty("EnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(("#FFFFFFFF", 1d), (((Windows.UI.Xaml.Media.SolidColorBrush)Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.EnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter)).DefaultValue).Color.ToString(), ((Windows.UI.Xaml.Media.SolidColorBrush)Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter.EnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.JumpListItemForegroundConverter)).DefaultValue).Opacity));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("ContentMarginProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ContentMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ContentMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ContentMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ContentMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("DisabledOpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DisabledOpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("DragOpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.DragOpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("ListViewItemPresenterHorizontalContentAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.HorizontalAlignment.Stretch, Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterHorizontalContentAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("ListViewItemPresenterPaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterPaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("ListViewItemPresenterVerticalContentAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.VerticalAlignment.Stretch, Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ListViewItemPresenterVerticalContentAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("PointerOverBackgroundMarginProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.PointerOverBackgroundMarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("ReorderHintOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.ReorderHintOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("SelectedBorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectedBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("SelectionCheckMarkVisualEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.SelectionCheckMarkVisualEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("CheckModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenterCheckMode.Inline, Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.CheckModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("RevealBackgroundShowsAboveContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBackgroundShowsAboveContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter).GetProperty("RevealBorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter.RevealBorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector).GetProperty("ItemHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.LoopingSelector.ItemHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector).GetProperty("ItemTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.LoopingSelector.ItemTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector).GetProperty("ItemWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.LoopingSelector.ItemWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector).GetProperty("ItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.LoopingSelector.ItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector).GetProperty("SelectedIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.LoopingSelector.SelectedIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector).GetProperty("SelectedItemProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.LoopingSelector.SelectedItemProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector).GetProperty("ShouldLoopProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.LoopingSelector.ShouldLoopProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.LoopingSelector)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter).GetProperty("IconProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter.IconProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.Popup).GetProperty("HorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Primitives.Popup.HorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.Popup)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.Popup).GetProperty("IsLightDismissEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.Popup.IsLightDismissEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.Popup)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.Popup).GetProperty("IsOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.Popup.IsOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.Popup)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.Popup).GetProperty("VerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Primitives.Popup.VerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.Popup)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.Popup).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.Primitives.Popup.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.Popup)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.Popup).GetProperty("ShouldConstrainToRootBoundsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.Primitives.Popup.ShouldConstrainToRootBoundsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.Popup)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.RepeatButton).GetProperty("DelayProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(500, Windows.UI.Xaml.Controls.Primitives.RepeatButton.DelayProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.RepeatButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.RepeatButton).GetProperty("IntervalProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(33, Windows.UI.Xaml.Controls.Primitives.RepeatButton.IntervalProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.RepeatButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ScrollBar).GetProperty("IndicatorModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode.None, Windows.UI.Xaml.Controls.Primitives.ScrollBar.IndicatorModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ScrollBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ScrollBar).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Vertical, Windows.UI.Xaml.Controls.Primitives.ScrollBar.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ScrollBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.ScrollBar).GetProperty("ViewportSizeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.Primitives.ScrollBar.ViewportSizeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.ScrollBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Primitives.Thumb).GetProperty("IsDraggingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.Primitives.Thumb.IsDraggingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Primitives.Thumb)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ProgressBar).GetProperty("IsIndeterminateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ProgressBar.IsIndeterminateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ProgressBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ProgressBar).GetProperty("ShowErrorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ProgressBar.ShowErrorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ProgressBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ProgressBar).GetProperty("ShowPausedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ProgressBar.ShowPausedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ProgressBar)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ProgressRing).GetProperty("IsActiveProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ProgressRing.IsActiveProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ProgressRing)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingControl).GetProperty("CaptionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.RatingControl.CaptionProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingControl).GetProperty("InitialSetValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.RatingControl.InitialSetValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingControl).GetProperty("IsClearEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.RatingControl.IsClearEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingControl).GetProperty("IsReadOnlyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RatingControl.IsReadOnlyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingControl).GetProperty("ItemInfoProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RatingControl.ItemInfoProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingControl).GetProperty("MaxRatingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(5, Windows.UI.Xaml.Controls.RatingControl.MaxRatingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingControl).GetProperty("PlaceholderValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1d, Windows.UI.Xaml.Controls.RatingControl.PlaceholderValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingControl).GetProperty("ValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1d, Windows.UI.Xaml.Controls.RatingControl.ValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo).GetProperty("DisabledGlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.RatingItemFontInfo.DisabledGlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo).GetProperty("GlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.RatingItemFontInfo.GlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo).GetProperty("PlaceholderGlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.RatingItemFontInfo.PlaceholderGlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo).GetProperty("PointerOverGlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.RatingItemFontInfo.PointerOverGlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo).GetProperty("PointerOverPlaceholderGlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.RatingItemFontInfo.PointerOverPlaceholderGlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo).GetProperty("UnsetGlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.RatingItemFontInfo.UnsetGlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemFontInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo).GetProperty("DisabledImageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RatingItemImageInfo.DisabledImageProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo).GetProperty("ImageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RatingItemImageInfo.ImageProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo).GetProperty("PlaceholderImageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RatingItemImageInfo.PlaceholderImageProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo).GetProperty("PointerOverImageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RatingItemImageInfo.PointerOverImageProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo).GetProperty("PointerOverPlaceholderImageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RatingItemImageInfo.PointerOverPlaceholderImageProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo).GetProperty("UnsetImageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RatingItemImageInfo.UnsetImageProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RatingItemImageInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RefreshContainer).GetProperty("PullDirectionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.RefreshPullDirection.TopToBottom, Windows.UI.Xaml.Controls.RefreshContainer.PullDirectionProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RefreshContainer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RefreshContainer).GetProperty("VisualizerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RefreshContainer.VisualizerProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RefreshContainer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RefreshVisualizer).GetProperty("ContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.RefreshVisualizer.ContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RefreshVisualizer)).DefaultValue);
			}
			// Skipped property InfoProviderProperty
			if (!typeof(Windows.UI.Xaml.Controls.RefreshVisualizer).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.RefreshVisualizerOrientation.Auto, Windows.UI.Xaml.Controls.RefreshVisualizer.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RefreshVisualizer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RefreshVisualizer).GetProperty("StateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.RefreshVisualizerState.Idle, Windows.UI.Xaml.Controls.RefreshVisualizer.StateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RefreshVisualizer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("AlignBottomWithPanelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RelativePanel.AlignBottomWithPanelProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("AlignHorizontalCenterWithPanelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RelativePanel.AlignHorizontalCenterWithPanelProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("AlignLeftWithPanelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RelativePanel.AlignLeftWithPanelProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("AlignRightWithPanelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RelativePanel.AlignRightWithPanelProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("AlignTopWithPanelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RelativePanel.AlignTopWithPanelProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("AlignVerticalCenterWithPanelProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RelativePanel.AlignVerticalCenterWithPanelProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("BorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RelativePanel.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RelativePanel.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RelativePanel.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RelativePanel.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("CornerRadiusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.RelativePanel.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).TopLeft, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.RelativePanel.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).TopRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.RelativePanel.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).BottomRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.RelativePanel.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).BottomLeft));
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RelativePanel.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RelativePanel.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RelativePanel.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RelativePanel.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.RelativePanel).GetProperty("BackgroundSizingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.BackgroundSizing.InnerBorderEdge, Windows.UI.Xaml.Controls.RelativePanel.BackgroundSizingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RelativePanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("AcceptsReturnProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.RichEditBox.AcceptsReturnProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("IsReadOnlyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RichEditBox.IsReadOnlyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("IsSpellCheckEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.RichEditBox.IsSpellCheckEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("IsTextPredictionEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.RichEditBox.IsTextPredictionEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("TextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Left, Windows.UI.Xaml.Controls.RichEditBox.TextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("TextWrappingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextWrapping.NoWrap, Windows.UI.Xaml.Controls.RichEditBox.TextWrappingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("IsColorFontEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.RichEditBox.IsColorFontEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("PreventKeyboardDisplayOnProgrammaticFocusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RichEditBox.PreventKeyboardDisplayOnProgrammaticFocusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("DesiredCandidateWindowAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CandidateWindowAlignment.Default, Windows.UI.Xaml.Controls.RichEditBox.DesiredCandidateWindowAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("TextReadingOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextReadingOrder.UseFlowDirection, Windows.UI.Xaml.Controls.RichEditBox.TextReadingOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("ClipboardCopyFormatProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.RichEditClipboardFormat.AllFormats, Windows.UI.Xaml.Controls.RichEditBox.ClipboardCopyFormatProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("MaxLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.RichEditBox.MaxLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("CharacterCasingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CharacterCasing.Normal, Windows.UI.Xaml.Controls.RichEditBox.CharacterCasingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("DisabledFormattingAcceleratorsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.DisabledFormattingAccelerators.None, Windows.UI.Xaml.Controls.RichEditBox.DisabledFormattingAcceleratorsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("HorizontalTextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Center, Windows.UI.Xaml.Controls.RichEditBox.HorizontalTextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichEditBox).GetProperty("IsHandwritingViewEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RichEditBox.IsHandwritingViewEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichEditBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("CharacterSpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.RichTextBlock.CharacterSpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("FontFamilyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.FontFamily", Windows.UI.Xaml.Controls.RichTextBlock.FontFamilyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property FontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("FontStretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStretch.Normal, Windows.UI.Xaml.Controls.RichTextBlock.FontStretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("FontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.RichTextBlock.FontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("FontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.RichTextBlock.FontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("HasOverflowContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RichTextBlock.HasOverflowContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("IsTextSelectionEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.RichTextBlock.IsTextSelectionEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("LineHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.RichTextBlock.LineHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("LineStackingStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.LineStackingStrategy.MaxHeight, Windows.UI.Xaml.Controls.RichTextBlock.LineStackingStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RichTextBlock.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RichTextBlock.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RichTextBlock.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RichTextBlock.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("TextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Left, Windows.UI.Xaml.Controls.RichTextBlock.TextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("TextIndentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.RichTextBlock.TextIndentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("TextTrimmingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextTrimming.None, Windows.UI.Xaml.Controls.RichTextBlock.TextTrimmingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("TextWrappingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextWrapping.Wrap, Windows.UI.Xaml.Controls.RichTextBlock.TextWrappingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("IsColorFontEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.RichTextBlock.IsColorFontEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("MaxLinesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.RichTextBlock.MaxLinesProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("OpticalMarginAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.OpticalMarginAlignment.None, Windows.UI.Xaml.Controls.RichTextBlock.OpticalMarginAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("TextLineBoundsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextLineBounds.Full, Windows.UI.Xaml.Controls.RichTextBlock.TextLineBoundsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("TextReadingOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextReadingOrder.UseFlowDirection, Windows.UI.Xaml.Controls.RichTextBlock.TextReadingOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("IsTextScaleFactorEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.RichTextBlock.IsTextScaleFactorEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("TextDecorationsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.TextDecorations.None, Windows.UI.Xaml.Controls.RichTextBlock.TextDecorationsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("HorizontalTextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Center, Windows.UI.Xaml.Controls.RichTextBlock.HorizontalTextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("IsTextTrimmedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RichTextBlock.IsTextTrimmedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlock).GetProperty("SelectionFlyoutProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Controls.TextCommandBarFlyout", Windows.UI.Xaml.Controls.RichTextBlock.SelectionFlyoutProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlock)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow).GetProperty("HasOverflowContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RichTextBlockOverflow.HasOverflowContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RichTextBlockOverflow.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RichTextBlockOverflow.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RichTextBlockOverflow.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.RichTextBlockOverflow.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow).GetProperty("MaxLinesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.RichTextBlockOverflow.MaxLinesProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow).GetProperty("IsTextTrimmedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.RichTextBlockOverflow.IsTextTrimmedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RichTextBlockOverflow)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RowDefinition).GetProperty("HeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((1d, 2), (((Windows.UI.Xaml.GridLength)Windows.UI.Xaml.Controls.RowDefinition.HeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RowDefinition)).DefaultValue).Value, (int)((Windows.UI.Xaml.GridLength)Windows.UI.Xaml.Controls.RowDefinition.HeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RowDefinition)).DefaultValue).GridUnitType));
			}
			if (!typeof(Windows.UI.Xaml.Controls.RowDefinition).GetProperty("MaxHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.PositiveInfinity, Windows.UI.Xaml.Controls.RowDefinition.MaxHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RowDefinition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.RowDefinition).GetProperty("MinHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.RowDefinition.MinHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.RowDefinition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollContentPresenter).GetProperty("CanContentRenderOutsideBoundsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ScrollContentPresenter.CanContentRenderOutsideBoundsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollContentPresenter).GetProperty("SizesContentToTemplatedParentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ScrollContentPresenter.SizesContentToTemplatedParentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollContentPresenter)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("IsScrollInertiaEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ScrollViewer.IsScrollInertiaEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("VerticalSnapPointsTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.SnapPointsType.Optional, Windows.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ViewportHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.ViewportHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ViewportWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.ViewportWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ZoomFactorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.ScrollViewer.ZoomFactorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ZoomModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ZoomMode.Enabled, Windows.UI.Xaml.Controls.ScrollViewer.ZoomModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("BringIntoViewOnFocusChangeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ScrollViewer.BringIntoViewOnFocusChangeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ComputedHorizontalScrollBarVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Visible, Windows.UI.Xaml.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ComputedVerticalScrollBarVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Visible, Windows.UI.Xaml.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ExtentHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.ExtentHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ExtentWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.ExtentWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("HorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.HorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("HorizontalScrollBarVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ScrollBarVisibility.Disabled, Windows.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("HorizontalScrollModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ScrollMode.Enabled, Windows.UI.Xaml.Controls.ScrollViewer.HorizontalScrollModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("HorizontalSnapPointsAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment.Near, Windows.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("HorizontalSnapPointsTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.SnapPointsType.Optional, Windows.UI.Xaml.Controls.ScrollViewer.HorizontalSnapPointsTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("IsDeferredScrollingEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ScrollViewer.IsDeferredScrollingEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("IsHorizontalRailEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ScrollViewer.IsHorizontalRailEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("IsHorizontalScrollChainingEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ScrollViewer.IsHorizontalScrollChainingEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ZoomSnapPointsTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.SnapPointsType.Optional, Windows.UI.Xaml.Controls.ScrollViewer.ZoomSnapPointsTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("IsVerticalRailEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ScrollViewer.IsVerticalRailEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("IsVerticalScrollChainingEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ScrollViewer.IsVerticalScrollChainingEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("IsZoomChainingEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ScrollViewer.IsZoomChainingEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("IsZoomInertiaEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.ScrollViewer.IsZoomInertiaEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("MaxZoomFactorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(10d, Windows.UI.Xaml.Controls.ScrollViewer.MaxZoomFactorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("MinZoomFactorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0.100000001490116d, Windows.UI.Xaml.Controls.ScrollViewer.MinZoomFactorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ScrollableHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.ScrollableHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ScrollableWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.ScrollableWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("VerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.VerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("VerticalScrollBarVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ScrollBarVisibility.Visible, Windows.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("VerticalScrollModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.ScrollMode.Enabled, Windows.UI.Xaml.Controls.ScrollViewer.VerticalScrollModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("VerticalSnapPointsAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.SnapPointsAlignment.Near, Windows.UI.Xaml.Controls.ScrollViewer.VerticalSnapPointsAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("HorizontalAnchorRatioProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.HorizontalAnchorRatioProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("ReduceViewportForCoreInputViewOcclusionsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ScrollViewer.ReduceViewportForCoreInputViewOcclusionsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("VerticalAnchorRatioProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ScrollViewer.VerticalAnchorRatioProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ScrollViewer).GetProperty("CanContentRenderOutsideBoundsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ScrollViewer.CanContentRenderOutsideBoundsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ScrollViewer)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SearchBox).GetProperty("ChooseSuggestionOnEnterProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.SearchBox.ChooseSuggestionOnEnterProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SearchBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SearchBox).GetProperty("FocusOnKeyboardInputProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.SearchBox.FocusOnKeyboardInputProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SearchBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SearchBox).GetProperty("SearchHistoryEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.SearchBox.SearchHistoryEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SearchBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SemanticZoom).GetProperty("CanChangeViewsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.SemanticZoom.CanChangeViewsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SemanticZoom)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SemanticZoom).GetProperty("IsZoomOutButtonEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.SemanticZoom.IsZoomOutButtonEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SemanticZoom)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SemanticZoom).GetProperty("IsZoomedInViewActiveProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.SemanticZoom.IsZoomedInViewActiveProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SemanticZoom)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitButton).GetProperty("CommandParameterProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SplitButton.CommandParameterProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitButton).GetProperty("CommandProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SplitButton.CommandProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitButton).GetProperty("FlyoutProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SplitButton.FlyoutProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitButton)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitView).GetProperty("CompactPaneLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.SplitView.CompactPaneLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitView).GetProperty("DisplayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.SplitViewDisplayMode.Overlay, Windows.UI.Xaml.Controls.SplitView.DisplayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitView).GetProperty("IsPaneOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.SplitView.IsPaneOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitView).GetProperty("OpenPaneLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.SplitView.OpenPaneLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitView).GetProperty("PanePlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.SplitViewPanePlacement.Left, Windows.UI.Xaml.Controls.SplitView.PanePlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SplitView).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.SplitView.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SplitView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.StackPanel).GetProperty("AreScrollSnapPointsRegularProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.StackPanel.AreScrollSnapPointsRegularProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.StackPanel).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Vertical, Windows.UI.Xaml.Controls.StackPanel.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.StackPanel).GetProperty("BorderThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.StackPanel.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.StackPanel.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.StackPanel.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.StackPanel.BorderThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.StackPanel).GetProperty("CornerRadiusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.StackPanel.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).TopLeft, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.StackPanel.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).TopRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.StackPanel.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).BottomRight, ((Windows.UI.Xaml.CornerRadius)Windows.UI.Xaml.Controls.StackPanel.CornerRadiusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).BottomLeft));
			}
			if (!typeof(Windows.UI.Xaml.Controls.StackPanel).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.StackPanel.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.StackPanel.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.StackPanel.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.StackPanel.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.StackPanel).GetProperty("SpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.StackPanel.SpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.StackPanel).GetProperty("BackgroundSizingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.BackgroundSizing.InnerBorderEdge, Windows.UI.Xaml.Controls.StackPanel.BackgroundSizingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.StackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwapChainPanel).GetProperty("CompositionScaleXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.SwapChainPanel.CompositionScaleXProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwapChainPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwapChainPanel).GetProperty("CompositionScaleYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.SwapChainPanel.CompositionScaleYProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwapChainPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeControl).GetProperty("BottomItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SwipeControl.BottomItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeControl).GetProperty("LeftItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SwipeControl.LeftItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeControl).GetProperty("RightItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SwipeControl.RightItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeControl).GetProperty("TopItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SwipeControl.TopItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeControl)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeItem).GetProperty("BackgroundProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SwipeItem.BackgroundProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeItem).GetProperty("BehaviorOnInvokedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.SwipeBehaviorOnInvoked.Auto, Windows.UI.Xaml.Controls.SwipeItem.BehaviorOnInvokedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeItem).GetProperty("CommandParameterProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SwipeItem.CommandParameterProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeItem).GetProperty("CommandProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SwipeItem.CommandProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeItem)).DefaultValue);
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Controls.SwipeItem).GetProperty("IconSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.SwipeItem.IconSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeItem).GetProperty("TextProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.SwipeItem.TextProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SwipeItems).GetProperty("ModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.SwipeMode.Reveal, Windows.UI.Xaml.Controls.SwipeItems.ModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SwipeItems)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SymbolIcon).GetProperty("SymbolProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Symbol.Emoji, Windows.UI.Xaml.Controls.SymbolIcon.SymbolProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SymbolIcon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.SymbolIconSource).GetProperty("SymbolProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Symbol.Emoji, Windows.UI.Xaml.Controls.SymbolIconSource.SymbolProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.SymbolIconSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("CharacterSpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.TextBlock.CharacterSpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("FontFamilyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.FontFamily", Windows.UI.Xaml.Controls.TextBlock.FontFamilyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property FontSizeProperty
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("FontStretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStretch.Normal, Windows.UI.Xaml.Controls.TextBlock.FontStretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("FontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Controls.TextBlock.FontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("FontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Controls.TextBlock.FontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("IsTextSelectionEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBlock.IsTextSelectionEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("LineHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.TextBlock.LineHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("LineStackingStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.LineStackingStrategy.MaxHeight, Windows.UI.Xaml.Controls.TextBlock.LineStackingStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("PaddingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.TextBlock.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.TextBlock.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.TextBlock.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.TextBlock.PaddingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("TextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Left, Windows.UI.Xaml.Controls.TextBlock.TextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("TextTrimmingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextTrimming.None, Windows.UI.Xaml.Controls.TextBlock.TextTrimmingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("TextWrappingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextWrapping.NoWrap, Windows.UI.Xaml.Controls.TextBlock.TextWrappingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("IsColorFontEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.TextBlock.IsColorFontEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("MaxLinesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.TextBlock.MaxLinesProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("OpticalMarginAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.OpticalMarginAlignment.None, Windows.UI.Xaml.Controls.TextBlock.OpticalMarginAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("TextLineBoundsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextLineBounds.Full, Windows.UI.Xaml.Controls.TextBlock.TextLineBoundsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("TextReadingOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextReadingOrder.UseFlowDirection, Windows.UI.Xaml.Controls.TextBlock.TextReadingOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("IsTextScaleFactorEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.TextBlock.IsTextScaleFactorEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("TextDecorationsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.TextDecorations.None, Windows.UI.Xaml.Controls.TextBlock.TextDecorationsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("HorizontalTextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Center, Windows.UI.Xaml.Controls.TextBlock.HorizontalTextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("IsTextTrimmedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBlock.IsTextTrimmedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBlock).GetProperty("SelectionFlyoutProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Controls.TextCommandBarFlyout", Windows.UI.Xaml.Controls.TextBlock.SelectionFlyoutProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBlock)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("TextWrappingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextWrapping.NoWrap, Windows.UI.Xaml.Controls.TextBox.TextWrappingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("TextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Left, Windows.UI.Xaml.Controls.TextBox.TextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("MaxLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.TextBox.MaxLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("IsTextPredictionEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.TextBox.IsTextPredictionEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("IsSpellCheckEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBox.IsSpellCheckEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("IsReadOnlyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBox.IsReadOnlyProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("AcceptsReturnProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBox.AcceptsReturnProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("PreventKeyboardDisplayOnProgrammaticFocusProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBox.PreventKeyboardDisplayOnProgrammaticFocusProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("IsColorFontEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.TextBox.IsColorFontEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("DesiredCandidateWindowAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CandidateWindowAlignment.Default, Windows.UI.Xaml.Controls.TextBox.DesiredCandidateWindowAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("TextReadingOrderProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextReadingOrder.UseFlowDirection, Windows.UI.Xaml.Controls.TextBox.TextReadingOrderProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("HorizontalTextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Center, Windows.UI.Xaml.Controls.TextBox.HorizontalTextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("CharacterCasingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.CharacterCasing.Normal, Windows.UI.Xaml.Controls.TextBox.CharacterCasingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("IsHandwritingViewEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBox.IsHandwritingViewEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("CanUndoProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBox.CanUndoProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("CanRedoProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBox.CanRedoProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TextBox).GetProperty("CanPasteClipboardContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TextBox.CanPasteClipboardContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TextBox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TimePicker).GetProperty("MinuteIncrementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.TimePicker.MinuteIncrementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TimePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TimePicker).GetProperty("LightDismissOverlayModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.LightDismissOverlayMode.Auto, Windows.UI.Xaml.Controls.TimePicker.LightDismissOverlayModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TimePicker)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TimePicker).GetProperty("SelectedTimeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Controls.TimePicker.SelectedTimeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TimePicker)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.TimePickerFlyout).GetProperty("ClockIdentifierProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("12HourClock", Windows.UI.Xaml.Controls.TimePickerFlyout.ClockIdentifierProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TimePickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TimePickerFlyout).GetProperty("MinuteIncrementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.TimePickerFlyout.MinuteIncrementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TimePickerFlyout)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TimePickerFlyout).GetProperty("TimeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("12:36:00", Windows.UI.Xaml.Controls.TimePickerFlyout.TimeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TimePickerFlyout)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem).GetProperty("IsCheckedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem.IsCheckedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ToggleSwitch).GetProperty("IsOnProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ToggleSwitch)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ToolTip).GetProperty("HorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ToolTip.HorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ToolTip)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ToolTip).GetProperty("IsOpenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.ToolTip.IsOpenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ToolTip)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ToolTip).GetProperty("PlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.PlacementMode.Top, Windows.UI.Xaml.Controls.ToolTip.PlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ToolTip)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ToolTip).GetProperty("VerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Controls.ToolTip.VerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ToolTip)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.ToolTip).GetProperty("PlacementRectProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("0,0,0,0", Windows.UI.Xaml.Controls.ToolTip.PlacementRectProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ToolTip)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Controls.ToolTipService).GetProperty("PlacementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.PlacementMode.Top, Windows.UI.Xaml.Controls.ToolTipService.PlacementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.ToolTipService)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("SelectionModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.TreeViewSelectionMode.Single, Windows.UI.Xaml.Controls.TreeView.SelectionModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("CanDragItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.TreeView.CanDragItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("CanReorderItemsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Controls.TreeView.CanReorderItemsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("ItemContainerStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeView.ItemContainerStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("ItemContainerStyleSelectorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeView.ItemContainerStyleSelectorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("ItemContainerTransitionsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeView.ItemContainerTransitionsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("ItemTemplateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeView.ItemTemplateProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("ItemTemplateSelectorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeView.ItemTemplateSelectorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeView).GetProperty("ItemsSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeView.ItemsSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("CollapsedGlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.TreeViewItem.CollapsedGlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("ExpandedGlyphProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("", Windows.UI.Xaml.Controls.TreeViewItem.ExpandedGlyphProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("GlyphBrushProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeViewItem.GlyphBrushProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("GlyphOpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Controls.TreeViewItem.GlyphOpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("GlyphSizeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(12d, Windows.UI.Xaml.Controls.TreeViewItem.GlyphSizeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("IsExpandedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TreeViewItem.IsExpandedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("TreeViewItemTemplateSettingsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeViewItem.TreeViewItemTemplateSettingsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("HasUnrealizedChildrenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TreeViewItem.HasUnrealizedChildrenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItem).GetProperty("ItemsSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeViewItem.ItemsSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItem)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings).GetProperty("CollapsedGlyphVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Collapsed, Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings.CollapsedGlyphVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings).GetProperty("DragItemsCountProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings.DragItemsCountProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings).GetProperty("ExpandedGlyphVisibilityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Visibility.Collapsed, Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings.ExpandedGlyphVisibilityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings).GetProperty("IndentationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings.IndentationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings.IndentationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings.IndentationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings.IndentationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewItemTemplateSettings)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewNode).GetProperty("ContentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TreeViewNode.ContentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewNode)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewNode).GetProperty("DepthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Controls.TreeViewNode.DepthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewNode)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewNode).GetProperty("HasChildrenProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TreeViewNode.HasChildrenProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewNode)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TreeViewNode).GetProperty("IsExpandedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.TreeViewNode.IsExpandedProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TreeViewNode)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("MinTallModeHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(641d, Windows.UI.Xaml.Controls.TwoPaneView.MinTallModeHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("MinWideModeWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(641d, Windows.UI.Xaml.Controls.TwoPaneView.MinWideModeWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("ModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.TwoPaneViewMode.SinglePane, Windows.UI.Xaml.Controls.TwoPaneView.ModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("Pane1LengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((1d, 0), (((Windows.UI.Xaml.GridLength)Windows.UI.Xaml.Controls.TwoPaneView.Pane1LengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue).Value, (int)((Windows.UI.Xaml.GridLength)Windows.UI.Xaml.Controls.TwoPaneView.Pane1LengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue).GridUnitType));
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("Pane1Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TwoPaneView.Pane1Property.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("Pane2LengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((1d, 2), (((Windows.UI.Xaml.GridLength)Windows.UI.Xaml.Controls.TwoPaneView.Pane2LengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue).Value, (int)((Windows.UI.Xaml.GridLength)Windows.UI.Xaml.Controls.TwoPaneView.Pane2LengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue).GridUnitType));
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("Pane2Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Controls.TwoPaneView.Pane2Property.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("PanePriorityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.TwoPaneViewPriority.Pane1, Windows.UI.Xaml.Controls.TwoPaneView.PanePriorityProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("TallModeConfigurationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration.TopBottom, Windows.UI.Xaml.Controls.TwoPaneView.TallModeConfigurationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.TwoPaneView).GetProperty("WideModeConfigurationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration.LeftRight, Windows.UI.Xaml.Controls.TwoPaneView.WideModeConfigurationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.TwoPaneView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid).GetProperty("ColumnSpanProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.VariableSizedWrapGrid.ColumnSpanProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid).GetProperty("HorizontalChildrenAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.HorizontalAlignment.Left, Windows.UI.Xaml.Controls.VariableSizedWrapGrid.HorizontalChildrenAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid).GetProperty("ItemHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.NaN, Windows.UI.Xaml.Controls.VariableSizedWrapGrid.ItemHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid).GetProperty("ItemWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.NaN, Windows.UI.Xaml.Controls.VariableSizedWrapGrid.ItemWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid).GetProperty("MaximumRowsOrColumnsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Controls.VariableSizedWrapGrid.MaximumRowsOrColumnsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Vertical, Windows.UI.Xaml.Controls.VariableSizedWrapGrid.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid).GetProperty("RowSpanProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1, Windows.UI.Xaml.Controls.VariableSizedWrapGrid.RowSpanProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid).GetProperty("VerticalChildrenAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.VerticalAlignment.Top, Windows.UI.Xaml.Controls.VariableSizedWrapGrid.VerticalChildrenAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VariableSizedWrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Viewbox).GetProperty("StretchDirectionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.StretchDirection.Both, Windows.UI.Xaml.Controls.Viewbox.StretchDirectionProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Viewbox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.Viewbox).GetProperty("StretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stretch.Uniform, Windows.UI.Xaml.Controls.Viewbox.StretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.Viewbox)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VirtualizingStackPanel).GetProperty("AreScrollSnapPointsRegularProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.VirtualizingStackPanel.AreScrollSnapPointsRegularProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VirtualizingStackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VirtualizingStackPanel).GetProperty("IsVirtualizingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.VirtualizingStackPanel.IsVirtualizingProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VirtualizingStackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VirtualizingStackPanel).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Vertical, Windows.UI.Xaml.Controls.VirtualizingStackPanel.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VirtualizingStackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.VirtualizingStackPanel).GetProperty("VirtualizationModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.VirtualizationMode.Recycling, Windows.UI.Xaml.Controls.VirtualizingStackPanel.VirtualizationModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.VirtualizingStackPanel)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WebView).GetProperty("CanGoBackProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.WebView.CanGoBackProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WebView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WebView).GetProperty("CanGoForwardProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.WebView.CanGoForwardProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WebView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WebView).GetProperty("DefaultBackgroundColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00000000", ((Windows.UI.Color)Windows.UI.Xaml.Controls.WebView.DefaultBackgroundColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WebView)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Controls.WebView).GetProperty("ContainsFullScreenElementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Controls.WebView.ContainsFullScreenElementProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WebView)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Brush).GetProperty("OpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.Brush.OpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Brush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.TileBrush).GetProperty("AlignmentXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.AlignmentX.Center, Windows.UI.Xaml.Media.TileBrush.AlignmentXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.TileBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.TileBrush).GetProperty("AlignmentYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.AlignmentY.Center, Windows.UI.Xaml.Media.TileBrush.AlignmentYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.TileBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.TileBrush).GetProperty("StretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stretch.Fill, Windows.UI.Xaml.Media.TileBrush.StretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.TileBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WrapGrid).GetProperty("HorizontalChildrenAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.HorizontalAlignment.Left, Windows.UI.Xaml.Controls.WrapGrid.HorizontalChildrenAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WrapGrid).GetProperty("ItemHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.NaN, Windows.UI.Xaml.Controls.WrapGrid.ItemHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WrapGrid).GetProperty("ItemWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(double.NaN, Windows.UI.Xaml.Controls.WrapGrid.ItemWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WrapGrid).GetProperty("MaximumRowsOrColumnsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(-1, Windows.UI.Xaml.Controls.WrapGrid.MaximumRowsOrColumnsProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WrapGrid).GetProperty("OrientationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Orientation.Vertical, Windows.UI.Xaml.Controls.WrapGrid.OrientationProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Controls.WrapGrid).GetProperty("VerticalChildrenAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.VerticalAlignment.Top, Windows.UI.Xaml.Controls.WrapGrid.VerticalChildrenAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Controls.WrapGrid)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Data.CollectionViewSource).GetProperty("IsSourceGroupedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Data.CollectionViewSource.IsSourceGroupedProperty.GetMetadata(typeof(Windows.UI.Xaml.Data.CollectionViewSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("CharacterSpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Documents.TextElement.CharacterSpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("FontFamilyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.FontFamily", Windows.UI.Xaml.Documents.TextElement.FontFamilyProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property FontSizeProperty
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("FontStretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStretch.Normal, Windows.UI.Xaml.Documents.TextElement.FontStretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("FontStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.FontStyle.Normal, Windows.UI.Xaml.Documents.TextElement.FontStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("FontWeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Text.FontWeight", Windows.UI.Xaml.Documents.TextElement.FontWeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue?.ToString() ?? "<NULL>");
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("LanguageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("en-US", Windows.UI.Xaml.Documents.TextElement.LanguageProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("IsTextScaleFactorEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Documents.TextElement.IsTextScaleFactorEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("AllowFocusOnInteractionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Documents.TextElement.AllowFocusOnInteractionProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("ExitDisplayModeOnAccessKeyInvokedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Documents.TextElement.ExitDisplayModeOnAccessKeyInvokedProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("IsAccessKeyScopeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.TextElement.IsAccessKeyScopeProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("KeyTipHorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Documents.TextElement.KeyTipHorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("KeyTipPlacementModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.KeyTipPlacementMode.Auto, Windows.UI.Xaml.Documents.TextElement.KeyTipPlacementModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("KeyTipVerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Documents.TextElement.KeyTipVerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.TextElement).GetProperty("TextDecorationsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Text.TextDecorations.None, Windows.UI.Xaml.Documents.TextElement.TextDecorationsProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.TextElement)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Block).GetProperty("LineHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Documents.Block.LineHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Block)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Block).GetProperty("LineStackingStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.LineStackingStrategy.MaxHeight, Windows.UI.Xaml.Documents.Block.LineStackingStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Block)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Block).GetProperty("MarginProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d, 0d, 0d), (((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Documents.Block.MarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Block)).DefaultValue).Left, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Documents.Block.MarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Block)).DefaultValue).Top, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Documents.Block.MarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Block)).DefaultValue).Right, ((Windows.UI.Xaml.Thickness)Windows.UI.Xaml.Documents.Block.MarginProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Block)).DefaultValue).Bottom));
			}
			if (!typeof(Windows.UI.Xaml.Documents.Block).GetProperty("TextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Center, Windows.UI.Xaml.Documents.Block.TextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Block)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Block).GetProperty("HorizontalTextAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.TextAlignment.Center, Windows.UI.Xaml.Documents.Block.HorizontalTextAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Block)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.ContentLink).GetProperty("CursorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Core.CoreCursorType.Arrow, Windows.UI.Xaml.Documents.ContentLink.CursorProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.ContentLink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.ContentLink).GetProperty("ElementSoundModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.ElementSoundMode.Default, Windows.UI.Xaml.Documents.ContentLink.ElementSoundModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.ContentLink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.ContentLink).GetProperty("FocusStateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FocusState.Unfocused, Windows.UI.Xaml.Documents.ContentLink.FocusStateProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.ContentLink)).DefaultValue);
			}
			// Skipped property IsTabStopProperty
			if (!typeof(Windows.UI.Xaml.Documents.ContentLink).GetProperty("TabIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(2147483647, Windows.UI.Xaml.Documents.ContentLink.TabIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.ContentLink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Glyphs).GetProperty("FontRenderingEmSizeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Documents.Glyphs.FontRenderingEmSizeProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Glyphs)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Glyphs).GetProperty("OriginXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Documents.Glyphs.OriginXProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Glyphs)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Glyphs).GetProperty("OriginYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Documents.Glyphs.OriginYProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Glyphs)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Glyphs).GetProperty("StyleSimulationsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.StyleSimulations.None, Windows.UI.Xaml.Documents.Glyphs.StyleSimulationsProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Glyphs)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Glyphs).GetProperty("ColorFontPaletteIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Documents.Glyphs.ColorFontPaletteIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Glyphs)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Glyphs).GetProperty("IsColorFontEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Glyphs.IsColorFontEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Glyphs)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Hyperlink).GetProperty("UnderlineStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Documents.UnderlineStyle.Single, Windows.UI.Xaml.Documents.Hyperlink.UnderlineStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Hyperlink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Hyperlink).GetProperty("ElementSoundModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.ElementSoundMode.Default, Windows.UI.Xaml.Documents.Hyperlink.ElementSoundModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Hyperlink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Hyperlink).GetProperty("FocusStateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FocusState.Unfocused, Windows.UI.Xaml.Documents.Hyperlink.FocusStateProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Hyperlink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Hyperlink).GetProperty("XYFocusDownNavigationStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusNavigationStrategy.Auto, Windows.UI.Xaml.Documents.Hyperlink.XYFocusDownNavigationStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Hyperlink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Hyperlink).GetProperty("XYFocusLeftNavigationStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusNavigationStrategy.Auto, Windows.UI.Xaml.Documents.Hyperlink.XYFocusLeftNavigationStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Hyperlink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Hyperlink).GetProperty("XYFocusRightNavigationStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusNavigationStrategy.Auto, Windows.UI.Xaml.Documents.Hyperlink.XYFocusRightNavigationStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Hyperlink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Hyperlink).GetProperty("XYFocusUpNavigationStrategyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.XYFocusNavigationStrategy.Auto, Windows.UI.Xaml.Documents.Hyperlink.XYFocusUpNavigationStrategyProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Hyperlink)).DefaultValue);
			}
			// Skipped property IsTabStopProperty
			if (!typeof(Windows.UI.Xaml.Documents.Hyperlink).GetProperty("TabIndexProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(2147483647, Windows.UI.Xaml.Documents.Hyperlink.TabIndexProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Hyperlink)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Paragraph).GetProperty("TextIndentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Documents.Paragraph.TextIndentProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Paragraph)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Run).GetProperty("FlowDirectionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FlowDirection.LeftToRight, Windows.UI.Xaml.Documents.Run.FlowDirectionProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Run)).DefaultValue);
			}
			// Skipped property ForegroundProperty
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("AnnotationAlternatesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Documents.Typography.AnnotationAlternatesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("CapitalSpacingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.CapitalSpacingProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("CapitalsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FontCapitals.Normal, Windows.UI.Xaml.Documents.Typography.CapitalsProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("CaseSensitiveFormsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.CaseSensitiveFormsProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("ContextualAlternatesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Documents.Typography.ContextualAlternatesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("ContextualLigaturesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Documents.Typography.ContextualLigaturesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("ContextualSwashesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Documents.Typography.ContextualSwashesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("DiscretionaryLigaturesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.DiscretionaryLigaturesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("EastAsianExpertFormsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.EastAsianExpertFormsProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("EastAsianLanguageProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FontEastAsianLanguage.Normal, Windows.UI.Xaml.Documents.Typography.EastAsianLanguageProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("EastAsianWidthsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FontEastAsianWidths.Normal, Windows.UI.Xaml.Documents.Typography.EastAsianWidthsProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("FractionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FontFraction.Normal, Windows.UI.Xaml.Documents.Typography.FractionProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("HistoricalFormsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.HistoricalFormsProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("HistoricalLigaturesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.HistoricalLigaturesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("KerningProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Documents.Typography.KerningProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("MathematicalGreekProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.MathematicalGreekProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("NumeralAlignmentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FontNumeralAlignment.Normal, Windows.UI.Xaml.Documents.Typography.NumeralAlignmentProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("NumeralStyleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FontNumeralStyle.Normal, Windows.UI.Xaml.Documents.Typography.NumeralStyleProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("SlashedZeroProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.SlashedZeroProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StandardLigaturesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Documents.Typography.StandardLigaturesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StandardSwashesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Documents.Typography.StandardSwashesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticAlternatesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Documents.Typography.StylisticAlternatesProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet10Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet10Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet11Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet11Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet12Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet12Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet13Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet13Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet14Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet14Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet15Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet15Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet16Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet16Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet17Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet17Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet18Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet18Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet19Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet19Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet1Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet1Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet20Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet20Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet2Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet2Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet3Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet3Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet4Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet4Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet5Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet5Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet6Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet6Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet7Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet7Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet8Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet8Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("StylisticSet9Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Documents.Typography.StylisticSet9Property.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Documents.Typography).GetProperty("VariantsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.FontVariants.Normal, Windows.UI.Xaml.Documents.Typography.VariantsProperty.GetMetadata(typeof(Windows.UI.Xaml.Documents.Typography)).DefaultValue);
			}
			// Skipped property IsEnabledProperty
			if (!typeof(Windows.UI.Xaml.Input.KeyboardAccelerator).GetProperty("KeyProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.System.VirtualKey.None, Windows.UI.Xaml.Input.KeyboardAccelerator.KeyProperty.GetMetadata(typeof(Windows.UI.Xaml.Input.KeyboardAccelerator)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Input.KeyboardAccelerator).GetProperty("ModifiersProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.System.VirtualKeyModifiers.None, Windows.UI.Xaml.Input.KeyboardAccelerator.ModifiersProperty.GetMetadata(typeof(Windows.UI.Xaml.Input.KeyboardAccelerator)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Input.StandardUICommand).GetProperty("KindProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Input.StandardUICommandKind.None, Windows.UI.Xaml.Input.StandardUICommand.KindProperty.GetMetadata(typeof(Windows.UI.Xaml.Input.StandardUICommand)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.XamlCompositionBrushBase).GetProperty("FallbackColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00000000", ((Windows.UI.Color)Windows.UI.Xaml.Media.XamlCompositionBrushBase.FallbackColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.XamlCompositionBrushBase)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.AcrylicBrush).GetProperty("AlwaysUseFallbackProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.AcrylicBrush.AlwaysUseFallbackProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.AcrylicBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.AcrylicBrush).GetProperty("BackgroundSourceProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.AcrylicBackgroundSource.Backdrop, Windows.UI.Xaml.Media.AcrylicBrush.BackgroundSourceProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.AcrylicBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.AcrylicBrush).GetProperty("TintColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#CCFFFFFF", ((Windows.UI.Color)Windows.UI.Xaml.Media.AcrylicBrush.TintColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.AcrylicBrush)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.AcrylicBrush).GetProperty("TintOpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.AcrylicBrush.TintOpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.AcrylicBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.AcrylicBrush).GetProperty("TintTransitionDurationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00.5000000", Windows.UI.Xaml.Media.AcrylicBrush.TintTransitionDurationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.AcrylicBrush)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.AcrylicBrush).GetProperty("TintLuminosityOpacityProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Media.AcrylicBrush.TintLuminosityOpacityProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.AcrylicBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.EasingFunctionBase).GetProperty("EasingModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Animation.EasingMode.EaseOut, Windows.UI.Xaml.Media.Animation.EasingFunctionBase.EasingModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.EasingFunctionBase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.BackEase).GetProperty("AmplitudeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.Animation.BackEase.AmplitudeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.BackEase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.BounceEase).GetProperty("BouncesProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(3, Windows.UI.Xaml.Media.Animation.BounceEase.BouncesProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.BounceEase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.BounceEase).GetProperty("BouncinessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(2d, Windows.UI.Xaml.Media.Animation.BounceEase.BouncinessProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.BounceEase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.Timeline).GetProperty("AutoReverseProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.Timeline.AutoReverseProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.Timeline)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.Timeline).GetProperty("BeginTimeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Media.Animation.Timeline.BeginTimeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.Timeline)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.Timeline).GetProperty("DurationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Automatic", Windows.UI.Xaml.Media.Animation.Timeline.DurationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.Timeline)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.Timeline).GetProperty("FillBehaviorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Animation.FillBehavior.HoldEnd, Windows.UI.Xaml.Media.Animation.Timeline.FillBehaviorProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.Timeline)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.Timeline).GetProperty("RepeatBehaviorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("1x", Windows.UI.Xaml.Media.Animation.Timeline.RepeatBehaviorProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.Timeline)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.Timeline).GetProperty("SpeedRatioProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.Animation.Timeline.SpeedRatioProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.Timeline)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ColorAnimation).GetProperty("ByProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00000000", ((Windows.UI.Color)Windows.UI.Xaml.Media.Animation.ColorAnimation.ByProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ColorAnimation)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ColorAnimation).GetProperty("EnableDependentAnimationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.ColorAnimation.EnableDependentAnimationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ColorAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ColorAnimation).GetProperty("FromProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00000000", ((Windows.UI.Color)Windows.UI.Xaml.Media.Animation.ColorAnimation.FromProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ColorAnimation)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ColorAnimation).GetProperty("ToProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00000000", ((Windows.UI.Color)Windows.UI.Xaml.Media.Animation.ColorAnimation.ToProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ColorAnimation)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames).GetProperty("EnableDependentAnimationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames.EnableDependentAnimationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ColorKeyFrame).GetProperty("KeyTimeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Media.Animation.ColorKeyFrame.KeyTimeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ColorKeyFrame)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ColorKeyFrame).GetProperty("ValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00000000", ((Windows.UI.Color)Windows.UI.Xaml.Media.Animation.ColorKeyFrame.ValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ColorKeyFrame)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo).GetProperty("IsStaggerElementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo.IsStaggerElementProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo).GetProperty("IsStaggeringEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo.IsStaggeringEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ContentThemeTransition).GetProperty("HorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.ContentThemeTransition.HorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ContentThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ContentThemeTransition).GetProperty("VerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(28d, Windows.UI.Xaml.Media.Animation.ContentThemeTransition.VerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ContentThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo).GetProperty("ExitElementContainerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.ExitElementContainerProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo).GetProperty("ExitElementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.ExitElementProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo).GetProperty("IsEntranceElementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.IsEntranceElementProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo).GetProperty("IsExitElementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo.IsExitElementProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DoubleKeyFrame).GetProperty("KeyTimeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Media.Animation.DoubleKeyFrame.KeyTimeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DoubleKeyFrame)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DoubleKeyFrame).GetProperty("ValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.DoubleKeyFrame.ValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DoubleKeyFrame)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ObjectKeyFrame).GetProperty("KeyTimeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Media.Animation.ObjectKeyFrame.KeyTimeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ObjectKeyFrame)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PointKeyFrame).GetProperty("KeyTimeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Media.Animation.PointKeyFrame.KeyTimeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointKeyFrame)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PointKeyFrame).GetProperty("ValueProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.Animation.PointKeyFrame.ValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointKeyFrame)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.Animation.PointKeyFrame.ValueProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointKeyFrame)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimation).GetProperty("ByProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.DoubleAnimation.ByProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimation).GetProperty("EnableDependentAnimationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.DoubleAnimation.EnableDependentAnimationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimation).GetProperty("FromProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.DoubleAnimation.FromProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimation).GetProperty("ToProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.DoubleAnimation.ToProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames).GetProperty("EnableDependentAnimationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames.EnableDependentAnimationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation).GetProperty("DirectionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.AnimationDirection.Top, Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation.DirectionProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation).GetProperty("ToOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation.ToOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.DragOverThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition).GetProperty("EdgeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation.Top, Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition.EdgeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.EdgeUIThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ElasticEase).GetProperty("OscillationsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(3, Windows.UI.Xaml.Media.Animation.ElasticEase.OscillationsProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ElasticEase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ElasticEase).GetProperty("SpringinessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(3d, Windows.UI.Xaml.Media.Animation.ElasticEase.SpringinessProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ElasticEase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo).GetProperty("IsTargetElementProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo.IsTargetElementProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.EntranceThemeTransition).GetProperty("FromHorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.EntranceThemeTransition.FromHorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.EntranceThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.EntranceThemeTransition).GetProperty("FromVerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(28d, Windows.UI.Xaml.Media.Animation.EntranceThemeTransition.FromVerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.EntranceThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.EntranceThemeTransition).GetProperty("IsStaggeringEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.EntranceThemeTransition.IsStaggeringEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.EntranceThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ExponentialEase).GetProperty("ExponentProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(2d, Windows.UI.Xaml.Media.Animation.ExponentialEase.ExponentProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ExponentialEase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.NavigationThemeTransition).GetProperty("DefaultNavigationTransitionInfoProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Media.Animation.NavigationThemeTransition.DefaultNavigationTransitionInfoProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.NavigationThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames).GetProperty("EnableDependentAnimationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.EnableDependentAnimationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PaneThemeTransition).GetProperty("EdgeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation.Right, Windows.UI.Xaml.Media.Animation.PaneThemeTransition.EdgeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PaneThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PointAnimation).GetProperty("ByProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.Animation.PointAnimation.ByProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointAnimation)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.Animation.PointAnimation.ByProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointAnimation)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PointAnimation).GetProperty("EnableDependentAnimationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.PointAnimation.EnableDependentAnimationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PointAnimation).GetProperty("FromProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.Animation.PointAnimation.FromProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointAnimation)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.Animation.PointAnimation.FromProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointAnimation)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PointAnimation).GetProperty("ToProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.Animation.PointAnimation.ToProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointAnimation)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.Animation.PointAnimation.ToProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointAnimation)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames).GetProperty("EnableDependentAnimationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames.EnableDependentAnimationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PopInThemeAnimation).GetProperty("FromHorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(40d, Windows.UI.Xaml.Media.Animation.PopInThemeAnimation.FromHorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PopInThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PopInThemeAnimation).GetProperty("FromVerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.PopInThemeAnimation.FromVerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PopInThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PopupThemeTransition).GetProperty("FromHorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.PopupThemeTransition.FromHorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PopupThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PopupThemeTransition).GetProperty("FromVerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(40d, Windows.UI.Xaml.Media.Animation.PopupThemeTransition.FromVerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PopupThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.PowerEase).GetProperty("PowerProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(2d, Windows.UI.Xaml.Media.Animation.PowerEase.PowerProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.PowerEase)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation).GetProperty("FromHorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromHorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation).GetProperty("FromVerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation.FromVerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.RepositionThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.RepositionThemeTransition).GetProperty("IsStaggeringEnabledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Media.Animation.RepositionThemeTransition.IsStaggeringEnabledProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.RepositionThemeTransition)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo).GetProperty("EffectProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect.FromBottom, Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo.EffectProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame).GetProperty("KeySplineProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.Animation.KeySpline", Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame.KeySplineProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplineColorKeyFrame)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame).GetProperty("KeySplineProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.Animation.KeySpline", Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame.KeySplineProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplineDoubleKeyFrame)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame).GetProperty("KeySplineProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Windows.UI.Xaml.Media.Animation.KeySpline", Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame.KeySplineProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplinePointKeyFrame)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation).GetProperty("ClosedLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ClosedLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation).GetProperty("ContentTranslationDirectionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.AnimationDirection.Top, Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationDirectionProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation).GetProperty("ContentTranslationOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.ContentTranslationOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation).GetProperty("OffsetFromCenterProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OffsetFromCenterProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation).GetProperty("OpenedLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation.OpenedLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitCloseThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation).GetProperty("ClosedLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ClosedLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation).GetProperty("ContentTranslationDirectionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Controls.Primitives.AnimationDirection.Top, Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationDirectionProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation).GetProperty("ContentTranslationOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.ContentTranslationOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation).GetProperty("OffsetFromCenterProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OffsetFromCenterProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation).GetProperty("OpenedLengthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation.OpenedLengthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SplitOpenThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation).GetProperty("FromHorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromHorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation).GetProperty("FromVerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(10d, Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation.FromVerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SwipeBackThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation).GetProperty("ToHorizontalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToHorizontalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation).GetProperty("ToVerticalOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(10d, Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation.ToVerticalOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Animation.SwipeHintThemeAnimation)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.ArcSegment).GetProperty("IsLargeArcProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.ArcSegment.IsLargeArcProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ArcSegment)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.ArcSegment).GetProperty("PointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.ArcSegment.PointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ArcSegment)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.ArcSegment.PointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ArcSegment)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.ArcSegment).GetProperty("RotationAngleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.ArcSegment.RotationAngleProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ArcSegment)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.ArcSegment).GetProperty("SizeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("0,0", Windows.UI.Xaml.Media.ArcSegment.SizeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ArcSegment)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.ArcSegment).GetProperty("SweepDirectionProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.SweepDirection.Counterclockwise, Windows.UI.Xaml.Media.ArcSegment.SweepDirectionProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ArcSegment)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.BezierSegment).GetProperty("Point1Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.BezierSegment.Point1Property.GetMetadata(typeof(Windows.UI.Xaml.Media.BezierSegment)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.BezierSegment.Point1Property.GetMetadata(typeof(Windows.UI.Xaml.Media.BezierSegment)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.BezierSegment).GetProperty("Point2Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.BezierSegment.Point2Property.GetMetadata(typeof(Windows.UI.Xaml.Media.BezierSegment)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.BezierSegment.Point2Property.GetMetadata(typeof(Windows.UI.Xaml.Media.BezierSegment)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.BezierSegment).GetProperty("Point3Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.BezierSegment.Point3Property.GetMetadata(typeof(Windows.UI.Xaml.Media.BezierSegment)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.BezierSegment.Point3Property.GetMetadata(typeof(Windows.UI.Xaml.Media.BezierSegment)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("CenterXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.CompositeTransform.CenterXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("CenterYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.CompositeTransform.CenterYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("RotationProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.CompositeTransform.RotationProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("ScaleXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.CompositeTransform.ScaleXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("ScaleYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.CompositeTransform.ScaleYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("SkewXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.CompositeTransform.SkewXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("SkewYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.CompositeTransform.SkewYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("TranslateXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.CompositeTransform.TranslateXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.CompositeTransform).GetProperty("TranslateYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.CompositeTransform.TranslateYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.CompositeTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.EllipseGeometry).GetProperty("CenterProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.EllipseGeometry.CenterProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.EllipseGeometry)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.EllipseGeometry.CenterProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.EllipseGeometry)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.EllipseGeometry).GetProperty("RadiusXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.EllipseGeometry.RadiusXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.EllipseGeometry)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.EllipseGeometry).GetProperty("RadiusYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.EllipseGeometry.RadiusYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.EllipseGeometry)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.GeometryGroup).GetProperty("FillRuleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.FillRule.EvenOdd, Windows.UI.Xaml.Media.GeometryGroup.FillRuleProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.GeometryGroup)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.GradientBrush).GetProperty("ColorInterpolationModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.ColorInterpolationMode.SRgbLinearInterpolation, Windows.UI.Xaml.Media.GradientBrush.ColorInterpolationModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.GradientBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.GradientBrush).GetProperty("MappingModeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.BrushMappingMode.RelativeToBoundingBox, Windows.UI.Xaml.Media.GradientBrush.MappingModeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.GradientBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.GradientBrush).GetProperty("SpreadMethodProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.GradientSpreadMethod.Pad, Windows.UI.Xaml.Media.GradientBrush.SpreadMethodProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.GradientBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.GradientStop).GetProperty("ColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00000000", ((Windows.UI.Color)Windows.UI.Xaml.Media.GradientStop.ColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.GradientStop)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.GradientStop).GetProperty("OffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.GradientStop.OffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.GradientStop)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapSource).GetProperty("PixelHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Media.Imaging.BitmapSource.PixelHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapSource).GetProperty("PixelWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Media.Imaging.BitmapSource.PixelWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage).GetProperty("CreateOptionsProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Imaging.BitmapCreateOptions.None, Windows.UI.Xaml.Media.Imaging.BitmapImage.CreateOptionsProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage).GetProperty("DecodePixelHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage).GetProperty("DecodePixelWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage).GetProperty("DecodePixelTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Imaging.DecodePixelType.Physical, Windows.UI.Xaml.Media.Imaging.BitmapImage.DecodePixelTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage).GetProperty("AutoPlayProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Media.Imaging.BitmapImage.AutoPlayProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage).GetProperty("IsAnimatedBitmapProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Imaging.BitmapImage.IsAnimatedBitmapProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage).GetProperty("IsPlayingProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.Imaging.BitmapImage.IsPlayingProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.BitmapImage)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap).GetProperty("PixelHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap).GetProperty("PixelWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0, Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap.PixelWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.RenderTargetBitmap)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.SvgImageSource).GetProperty("RasterizePixelHeightProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelHeightProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.SvgImageSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Imaging.SvgImageSource).GetProperty("RasterizePixelWidthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Imaging.SvgImageSource.RasterizePixelWidthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Imaging.SvgImageSource)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.LineGeometry).GetProperty("EndPointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.LineGeometry.EndPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LineGeometry)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.LineGeometry.EndPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LineGeometry)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.LineGeometry).GetProperty("StartPointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.LineGeometry.StartPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LineGeometry)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.LineGeometry.StartPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LineGeometry)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.LineSegment).GetProperty("PointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.LineSegment.PointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LineSegment)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.LineSegment.PointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LineSegment)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.LinearGradientBrush).GetProperty("EndPointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((1d, 1d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.LinearGradientBrush.EndPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LinearGradientBrush)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.LinearGradientBrush.EndPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LinearGradientBrush)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.LinearGradientBrush).GetProperty("StartPointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.LinearGradientBrush.StartPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LinearGradientBrush)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.LinearGradientBrush.StartPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.LinearGradientBrush)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.Matrix3DProjection).GetProperty("ProjectionMatrixProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", Windows.UI.Xaml.Media.Matrix3DProjection.ProjectionMatrixProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Matrix3DProjection)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.MatrixTransform).GetProperty("MatrixProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("Identity", Windows.UI.Xaml.Media.MatrixTransform.MatrixProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.MatrixTransform)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("CenterXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("CenterYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("CenterZProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.CenterZProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("RotationXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("RotationYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("RotationZProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.RotationZProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("ScaleXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("ScaleYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("ScaleZProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.ScaleZProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("TranslateXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("TranslateYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D).GetProperty("TranslateZProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.CompositeTransform3D.TranslateZProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.CompositeTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D).GetProperty("DepthProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D.DepthProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D).GetProperty("OffsetXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D).GetProperty("OffsetYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D.OffsetYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.Media3D.PerspectiveTransform3D)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PathFigure).GetProperty("IsClosedProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.PathFigure.IsClosedProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PathFigure)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PathFigure).GetProperty("IsFilledProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(true, Windows.UI.Xaml.Media.PathFigure.IsFilledProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PathFigure)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PathFigure).GetProperty("StartPointProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.PathFigure.StartPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PathFigure)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.PathFigure.StartPointProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PathFigure)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.PathGeometry).GetProperty("FillRuleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.FillRule.EvenOdd, Windows.UI.Xaml.Media.PathGeometry.FillRuleProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PathGeometry)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("CenterOfRotationXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0.5d, Windows.UI.Xaml.Media.PlaneProjection.CenterOfRotationXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("CenterOfRotationYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0.5d, Windows.UI.Xaml.Media.PlaneProjection.CenterOfRotationYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("CenterOfRotationZProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.CenterOfRotationZProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("GlobalOffsetXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.GlobalOffsetXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("GlobalOffsetYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.GlobalOffsetYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("GlobalOffsetZProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.GlobalOffsetZProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("LocalOffsetXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.LocalOffsetXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("LocalOffsetYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.LocalOffsetYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("LocalOffsetZProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.LocalOffsetZProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("ProjectionMatrixProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", Windows.UI.Xaml.Media.PlaneProjection.ProjectionMatrixProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("RotationXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.RotationXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("RotationYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.RotationYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.PlaneProjection).GetProperty("RotationZProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.PlaneProjection.RotationZProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.PlaneProjection)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.QuadraticBezierSegment).GetProperty("Point1Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.QuadraticBezierSegment.Point1Property.GetMetadata(typeof(Windows.UI.Xaml.Media.QuadraticBezierSegment)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.QuadraticBezierSegment.Point1Property.GetMetadata(typeof(Windows.UI.Xaml.Media.QuadraticBezierSegment)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.QuadraticBezierSegment).GetProperty("Point2Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual((0d, 0d), (((Windows.Foundation.Point)Windows.UI.Xaml.Media.QuadraticBezierSegment.Point2Property.GetMetadata(typeof(Windows.UI.Xaml.Media.QuadraticBezierSegment)).DefaultValue).X, ((Windows.Foundation.Point)Windows.UI.Xaml.Media.QuadraticBezierSegment.Point2Property.GetMetadata(typeof(Windows.UI.Xaml.Media.QuadraticBezierSegment)).DefaultValue).Y));
			}
			if (!typeof(Windows.UI.Xaml.Media.RectangleGeometry).GetProperty("RectProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("0,0,0,0", Windows.UI.Xaml.Media.RectangleGeometry.RectProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.RectangleGeometry)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.RevealBrush).GetProperty("AlwaysUseFallbackProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.Media.RevealBrush.AlwaysUseFallbackProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.RevealBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.RevealBrush).GetProperty("ColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00FFFFFF", ((Windows.UI.Color)Windows.UI.Xaml.Media.RevealBrush.ColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.RevealBrush)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.RevealBrush).GetProperty("StateProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.RevealBrushState.Normal, Windows.UI.Xaml.Media.RevealBrush.StateProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.RevealBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.RevealBrush).GetProperty("TargetThemeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.ApplicationTheme.Light, Windows.UI.Xaml.Media.RevealBrush.TargetThemeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.RevealBrush)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.RotateTransform).GetProperty("AngleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.RotateTransform.AngleProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.RotateTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.RotateTransform).GetProperty("CenterXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.RotateTransform.CenterXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.RotateTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.RotateTransform).GetProperty("CenterYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.RotateTransform.CenterYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.RotateTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.ScaleTransform).GetProperty("CenterXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.ScaleTransform.CenterXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ScaleTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.ScaleTransform).GetProperty("CenterYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.ScaleTransform.CenterYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ScaleTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.ScaleTransform).GetProperty("ScaleXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.ScaleTransform.ScaleXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ScaleTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.ScaleTransform).GetProperty("ScaleYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Media.ScaleTransform.ScaleYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.ScaleTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.SkewTransform).GetProperty("AngleXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.SkewTransform.AngleXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.SkewTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.SkewTransform).GetProperty("AngleYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.SkewTransform.AngleYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.SkewTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.SkewTransform).GetProperty("CenterXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.SkewTransform.CenterXProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.SkewTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.SkewTransform).GetProperty("CenterYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.SkewTransform.CenterYProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.SkewTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.SolidColorBrush).GetProperty("ColorProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("#00000000", ((Windows.UI.Color)Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.SolidColorBrush)).DefaultValue).ToString());
			}
			if (!typeof(Windows.UI.Xaml.Media.TimelineMarker).GetProperty("TimeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual("00:00:00", Windows.UI.Xaml.Media.TimelineMarker.TimeProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.TimelineMarker)).DefaultValue?.ToString() ?? "<NULL>");
			}
			if (!typeof(Windows.UI.Xaml.Media.TranslateTransform).GetProperty("XProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.TranslateTransform.XProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.TranslateTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Media.TranslateTransform).GetProperty("YProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Media.TranslateTransform.YProperty.GetMetadata(typeof(Windows.UI.Xaml.Media.TranslateTransform)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Navigation.PageStackEntry).GetProperty("SourcePageTypeProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(null, Windows.UI.Xaml.Navigation.PageStackEntry.SourcePageTypeProperty.GetMetadata(typeof(Windows.UI.Xaml.Navigation.PageStackEntry)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Shape).GetProperty("StretchProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.Stretch.None, Windows.UI.Xaml.Shapes.Shape.StretchProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Shape)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Shape).GetProperty("StrokeDashCapProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.PenLineCap.Flat, Windows.UI.Xaml.Shapes.Shape.StrokeDashCapProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Shape)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Shape).GetProperty("StrokeDashOffsetProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Shapes.Shape.StrokeDashOffsetProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Shape)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Shape).GetProperty("StrokeEndLineCapProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.PenLineCap.Flat, Windows.UI.Xaml.Shapes.Shape.StrokeEndLineCapProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Shape)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Shape).GetProperty("StrokeLineJoinProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.PenLineJoin.Miter, Windows.UI.Xaml.Shapes.Shape.StrokeLineJoinProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Shape)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Shape).GetProperty("StrokeMiterLimitProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(10d, Windows.UI.Xaml.Shapes.Shape.StrokeMiterLimitProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Shape)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Shape).GetProperty("StrokeStartLineCapProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.PenLineCap.Flat, Windows.UI.Xaml.Shapes.Shape.StrokeStartLineCapProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Shape)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Shape).GetProperty("StrokeThicknessProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(1d, Windows.UI.Xaml.Shapes.Shape.StrokeThicknessProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Shape)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Line).GetProperty("X1Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Shapes.Line.X1Property.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Line)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Line).GetProperty("X2Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Shapes.Line.X2Property.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Line)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Line).GetProperty("Y1Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Shapes.Line.Y1Property.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Line)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Line).GetProperty("Y2Property").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Shapes.Line.Y2Property.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Line)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Polygon).GetProperty("FillRuleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.FillRule.EvenOdd, Windows.UI.Xaml.Shapes.Polygon.FillRuleProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Polygon)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Polyline).GetProperty("FillRuleProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(Windows.UI.Xaml.Media.FillRule.EvenOdd, Windows.UI.Xaml.Shapes.Polyline.FillRuleProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Polyline)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Rectangle).GetProperty("RadiusXProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Shapes.Rectangle.RadiusXProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Rectangle)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.Shapes.Rectangle).GetProperty("RadiusYProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(0d, Windows.UI.Xaml.Shapes.Rectangle.RadiusYProperty.GetMetadata(typeof(Windows.UI.Xaml.Shapes.Rectangle)).DefaultValue);
			}
			if (!typeof(Windows.UI.Xaml.StateTrigger).GetProperty("IsActiveProperty").CustomAttributes.Any(a => a.AttributeType == typeof(NotImplementedAttribute)))
			{
				Assert.AreEqual(false, Windows.UI.Xaml.StateTrigger.IsActiveProperty.GetMetadata(typeof(Windows.UI.Xaml.StateTrigger)).DefaultValue);
			}


		}
	}
}
