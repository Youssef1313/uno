<Project>
	<PropertyGroup>
		<IsWinAppSdk>true</IsWinAppSdk>
		<TargetPlatformMinVersion Condition=" $(TargetPlatformMinVersion) == '' ">10.0.18362.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition=" $(SupportedOSPlatformVersion) == '' ">$(TargetPlatformMinVersion)</SupportedOSPlatformVersion>
		<RuntimeIdentifiers Condition=" $(RuntimeIdentifiers) == '' ">win-x86;win-x64;win-arm64</RuntimeIdentifiers>

		<!-- Set EnableMsixTooling to true only for executables - setting this on class libraries prevents assets from being correctly copied to windows target -->
		<EnableMsixTooling Condition=" $(EnableMsixTooling) == '' AND ('$(OutputType)' == 'WinExe' OR '$(OutputType)' == 'Exe') ">true</EnableMsixTooling>

		<EnableWindowsTargeting Condition=" $(EnableWindowsTargeting) == '' ">true</EnableWindowsTargeting>
	</PropertyGroup>

	<PropertyGroup Condition="'$(BuildingInsideVisualStudio)' != 'true'">
		<!-- Workaround Uno Issue 15492 - This must be set to true for the Library so that the generated files use the Library name in the path -->
		<EnableCoreMrtTooling Condition=" $(EnableCoreMrtTooling) == '' AND $(OutputType) != 'WinExe' AND $(OutputType) != 'Exe' ">true</EnableCoreMrtTooling>
		<EnableCoreMrtTooling Condition=" $(EnableCoreMrtTooling) == '' AND '$(MSBuildRuntimeType)' == 'Core' ">false</EnableCoreMrtTooling>
	</PropertyGroup>

	<PropertyGroup Condition="$(SingleProject)!='true' and $(OutputType)=='WinExe'">
		<ApplicationManifest Condition=" $(ApplicationManifest) == '' ">app.manifest</ApplicationManifest>
		<Platforms Condition=" $(Platforms) == '' ">x86;x64;arm64</Platforms>
		<PublishProfile Condition=" $(PublishProfile) == '' ">win-$(Platform).pubxml</PublishProfile>
		<UseWinUI Condition=" $(UseWinUI) == '' ">true</UseWinUI>
	</PropertyGroup>

	<ItemGroup Condition="$(SingleProject)!='true' and $(OutputType)=='WinExe'">
		<!-- Exclude Manifest items that have already been added to avoid duplicates -->
		<Manifest Include="$(ApplicationManifest)" Exclude="@(Manifest)" />
	</ItemGroup>

	<!-- Workaround to avoid including Project XBFs in the PRI file: https://github.com/microsoft/microsoft-ui-xaml/issues/8857 -->
	<Import Project="winappsdk-workaround.targets"
			Condition=" '$(SingleProject)' != 'true' and '$(DisableWinUI8857_Workaround)' != 'true' "/>

	<Import Project="Uno.SingleProject.WinAppSdk.targets"
			Condition=" $(SingleProject) == 'true' " />
</Project>
