<Project Sdk="Microsoft.Build.NoTargets">
	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<PackageId>Uno.Sdk</PackageId>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<NoWarn>$(NoWarn);NU5128</NoWarn>
		<PackageType>MSBuildSdk</PackageType>
		<SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
		<Description>Provides a base SDK for Uno Platform projects.</Description>
		<PackageIcon>uno.png</PackageIcon>
	</PropertyGroup>

	<ItemGroup>
		<SdkFile Include="Sdk\**\*.targets;Sdk\**\*.props" />
		<TargetFile Include="targets\**\*.props;targets\**\*.targets" />

		<None Include="..\Common\uno.png" Pack="true" PackagePath=""/>
	</ItemGroup>

	<Target Name="CopySdkFiles" BeforeTargets="Pack;ReplacePackageVersion">
		<Copy SourceFiles="@(SdkFile)" DestinationFolder="$(IntermediateOutputPath)Sdk" SkipUnchangedFiles="true" />
		<Copy SourceFiles="@(TargetFile)" DestinationFolder="$(IntermediateOutputPath)targets" SkipUnchangedFiles="true" />
	</Target>

	<Target Name="ReplacePackageVersion" BeforeTargets="Pack;_IntermediatePack" AfterTargets="CopySdkFiles">
		<ItemGroup>
			<_IntermediateSdkFile Include="$(IntermediateOutputPath)Sdk\*.props;$(IntermediateOutputPath)Sdk\*.targets" />
			<_IntermediateTargetFile Include="$(IntermediateOutputPath)targets\*.props;$(IntermediateOutputPath)targets\*.targets" />
		</ItemGroup>

		<ReplaceFileText
			Filename="%(_IntermediateSdkFile.Identity)"
			MatchExpression="DefaultUnoVersion"
			ReplacementText="$(PackageVersion)" />

		<ReplaceFileText
			Filename="%(_IntermediateTargetFile.Identity)"
			MatchExpression="DefaultUnoVersion"
			ReplacementText="$(PackageVersion)" />

		<ItemGroup>
			<None Include="%(_IntermediateSdkFile.Identity)" Pack="true" PackagePath="Sdk\%(_IntermediateSdkFile.Filename)%(_IntermediateSdkFile.Extension)" />
			<None Include="%(_IntermediateTargetFile.Identity)" Pack="true" PackagePath="targets\%(_IntermediateTargetFile.Filename)%(_IntermediateTargetFile.Extension)" />
		</ItemGroup>
	</Target>

	<Target Name="DeleteCachedPackage" Condition="'$(CI)' != 'true'" BeforeTargets="Pack">
		<ItemGroup>
			<ToDelete Include="$(PackageOutputPath)\$(PackageId).$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)*.*" />
			<ToDelete Include="$(LocalArtifactStagingDirectory)\$(PackageId).$(GitBaseVersionMajor).$(GitBaseVersionMinor).*" />
		</ItemGroup>
		<Delete Files="@(ToDelete)" />
		<Exec Command='rd "$(NuGetPackageRoot)$(PackageId.ToLowerInvariant())" /q /s'
			Condition="Exists('$(NuGetPackageRoot)$(PackageId.ToLowerInvariant())') And '$(OS)' == 'Windows_NT'" />
		<Exec Command='rm -rf "$(NuGetPackageRoot)$(PackageId.ToLowerInvariant())"'
			Condition="Exists('$(NuGetPackageRoot)$(PackageId.ToLowerInvariant())') And '$(OS)' != 'Windows_NT'" />
	</Target>

	<!-- Using Regex Replace prevents XmlPoke from replacing Tabs with Spaces -->
	<UsingTask TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<Filename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					File.WriteAllText(
						Filename,
						Regex.Replace(File.ReadAllText(Filename), MatchExpression, ReplacementText)
						);
				]]>
			</Code>
		</Task>
	</UsingTask>

</Project>
